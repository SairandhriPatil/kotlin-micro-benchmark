public class de.fraunhofer.iem.classesAndObjects.classes.abstractClass.AnimalMain extends java.lang.Object
{

    public void <init>()
    {
        de.fraunhofer.iem.classesAndObjects.classes.abstractClass.AnimalMain this;

        nop;

        this := @this: de.fraunhofer.iem.classesAndObjects.classes.abstractClass.AnimalMain;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public static void main(java.lang.String[])
    {
        de.fraunhofer.iem.classesAndObjects.classes.abstractClass.Dog $stack3;
        de.fraunhofer.iem.classesAndObjects.classes.abstractClass.Horse $stack2;
        de.fraunhofer.iem.classesAndObjects.classes.abstractClass.Cat $stack1;
        java.lang.String[] args;
        java.lang.String varReplacer279, varReplacer280, varReplacer281;

        nop;

        args := @parameter0: java.lang.String[];

        $stack1 = new de.fraunhofer.iem.classesAndObjects.classes.abstractClass.Cat;

        varReplacer280 = "AAATGC";

        specialinvoke $stack1.<de.fraunhofer.iem.classesAndObjects.classes.abstractClass.Cat: void <init>(java.lang.String)>(varReplacer280);

        staticinvoke <de.fraunhofer.iem.classesAndObjects.classes.abstractClass.AnimalMain: void displayAnimal(de.fraunhofer.iem.classesAndObjects.classes.abstractClass.Animal)>($stack1);

        $stack2 = new de.fraunhofer.iem.classesAndObjects.classes.abstractClass.Horse;

        varReplacer281 = "ATTCG";

        specialinvoke $stack2.<de.fraunhofer.iem.classesAndObjects.classes.abstractClass.Horse: void <init>(java.lang.String)>(varReplacer281);

        staticinvoke <de.fraunhofer.iem.classesAndObjects.classes.abstractClass.AnimalMain: void displayAnimal(de.fraunhofer.iem.classesAndObjects.classes.abstractClass.Animal)>($stack2);

        $stack3 = new de.fraunhofer.iem.classesAndObjects.classes.abstractClass.Dog;

        varReplacer279 = "CGTTA";

        specialinvoke $stack3.<de.fraunhofer.iem.classesAndObjects.classes.abstractClass.Dog: void <init>(java.lang.String)>(varReplacer279);

        staticinvoke <de.fraunhofer.iem.classesAndObjects.classes.abstractClass.AnimalMain: void displayAnimal(de.fraunhofer.iem.classesAndObjects.classes.abstractClass.Animal)>($stack3);

        return;
    }

    private static void displayAnimal(de.fraunhofer.iem.classesAndObjects.classes.abstractClass.Animal)
    {
        de.fraunhofer.iem.classesAndObjects.classes.abstractClass.Animal animal;

        nop;

        animal := @parameter0: de.fraunhofer.iem.classesAndObjects.classes.abstractClass.Animal;

        virtualinvoke animal.<de.fraunhofer.iem.classesAndObjects.classes.abstractClass.Animal: void displayDNA()>();

        virtualinvoke animal.<de.fraunhofer.iem.classesAndObjects.classes.abstractClass.Animal: void makeNoise()>();

        return;
    }
}
