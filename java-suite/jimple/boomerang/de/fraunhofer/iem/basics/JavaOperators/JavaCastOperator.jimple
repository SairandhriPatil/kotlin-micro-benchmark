public class de.fraunhofer.iem.basics.JavaOperators.JavaCastOperator extends java.lang.Object
{

    public void <init>()
    {
        de.fraunhofer.iem.basics.JavaOperators.JavaCastOperator this;

        nop;

        this := @this: de.fraunhofer.iem.basics.JavaOperators.JavaCastOperator;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public static void main(java.lang.String[])
    {
        null_type varReplacer231;
        int varReplacer230;
        java.lang.String[] args;
        java.lang.String varReplacer232;
        java.lang.Integer $stack1;

        nop;

        args := @parameter0: java.lang.String[];

        varReplacer232 = "Ranjith";

        staticinvoke <de.fraunhofer.iem.basics.JavaOperators.JavaCastOperator: void dummy(java.lang.Object)>(varReplacer232);

        varReplacer231 = null;

        staticinvoke <de.fraunhofer.iem.basics.JavaOperators.JavaCastOperator: void dummy(java.lang.Object)>(varReplacer231);

        varReplacer230 = 123;

        $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(varReplacer230);

        staticinvoke <de.fraunhofer.iem.basics.JavaOperators.JavaCastOperator: void dummy(java.lang.Object)>($stack1);

        return;
    }

    private static void dummy(java.lang.Object)
    {
        java.io.PrintStream $stack3;
        java.lang.Object ob;
        java.lang.StringBuilder $stack2, $stack4, $stack5;
        java.lang.String temp, $stack6, varReplacer233;

        nop;

        ob := @parameter0: java.lang.Object;

        temp = (java.lang.String) ob;

        $stack3 = <java.lang.System: java.io.PrintStream out>;

        $stack2 = new java.lang.StringBuilder;

        specialinvoke $stack2.<java.lang.StringBuilder: void <init>()>();

        varReplacer233 = "String = ";

        $stack4 = virtualinvoke $stack2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer233);

        $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(temp);

        $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $stack3.<java.io.PrintStream: void println(java.lang.String)>($stack6);

        return;
    }
}
