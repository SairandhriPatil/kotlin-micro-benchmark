public class de.fraunhofer.iem.basics.JavaOperators.JavaBitwiseOperators extends java.lang.Object
{

    public void <init>()
    {
        de.fraunhofer.iem.basics.JavaOperators.JavaBitwiseOperators this;

        nop;

        this := @this: de.fraunhofer.iem.basics.JavaOperators.JavaBitwiseOperators;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] args;
        int $stack2, $stack3, $stack5, $stack7, $stack9, $stack11, $stack13, $stack15, $i0;
        java.lang.String varReplacer229;
        java.io.PrintStream $stack4, $stack6, $stack8, $stack10, $stack12, $stack14, $stack16;

        nop;

        args := @parameter0: java.lang.String[];

        varReplacer229 = "int";

        $stack2 = staticinvoke <de.fraunhofer.iem.basics.JavaOperators.JavaComparisonOperators: int getInt(java.lang.String)>(varReplacer229);

        $stack4 = <java.lang.System: java.io.PrintStream out>;

        $stack3 = $stack2 << 2;

        virtualinvoke $stack4.<java.io.PrintStream: void println(int)>($stack3);

        $stack6 = <java.lang.System: java.io.PrintStream out>;

        $stack5 = $stack2 >> 2;

        virtualinvoke $stack6.<java.io.PrintStream: void println(int)>($stack5);

        $stack8 = <java.lang.System: java.io.PrintStream out>;

        $stack7 = $stack2 >>> 2;

        virtualinvoke $stack8.<java.io.PrintStream: void println(int)>($stack7);

        $stack10 = <java.lang.System: java.io.PrintStream out>;

        $stack9 = $stack2 & 2;

        virtualinvoke $stack10.<java.io.PrintStream: void println(int)>($stack9);

        $stack12 = <java.lang.System: java.io.PrintStream out>;

        $stack11 = $stack2 | 2;

        virtualinvoke $stack12.<java.io.PrintStream: void println(int)>($stack11);

        $stack14 = <java.lang.System: java.io.PrintStream out>;

        $stack13 = $stack2 ^ 2;

        virtualinvoke $stack14.<java.io.PrintStream: void println(int)>($stack13);

        $stack16 = <java.lang.System: java.io.PrintStream out>;

        $i0 = (int) -1;

        $stack15 = $stack2 ^ $i0;

        virtualinvoke $stack16.<java.io.PrintStream: void println(int)>($stack15);

        return;
    }
}
