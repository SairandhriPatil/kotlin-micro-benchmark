{
    "className": "de.fraunhofer.iem.basics.controlFlow.conditionAndLoops.JavaIf",
    "superClass": "java.lang.Object",
    "implementedInterface": [],
    "methodCount": 6,
    "methodsSignature": [
        "<de.fraunhofer.iem.basics.controlFlow.conditionAndLoops.JavaIf: void <init>()>",
        "<de.fraunhofer.iem.basics.controlFlow.conditionAndLoops.JavaIf: void main(java.lang.String[])>",
        "<de.fraunhofer.iem.basics.controlFlow.conditionAndLoops.JavaIf: int max1(int,int)>",
        "<de.fraunhofer.iem.basics.controlFlow.conditionAndLoops.JavaIf: int max2(int,int)>",
        "<de.fraunhofer.iem.basics.controlFlow.conditionAndLoops.JavaIf: int max3(int,int,int)>",
        "<de.fraunhofer.iem.basics.controlFlow.conditionAndLoops.JavaIf: java.lang.String sign(int)>"
    ],
    "methodsInformation": {
        "void <init>()": {
            "localVariables": {"this": "de.fraunhofer.iem.basics.controlFlow.conditionAndLoops.JavaIf"},
            "stackVariables": {},
            "invokeExpressions": ["<java.lang.Object: void <init>()>"]
        },
        "void main(java.lang.String[])": {
            "localVariables": {
                "args": "java.lang.String[]",
                "varReplacer4": "int",
                "varReplacer5": "int",
                "varReplacer6": "int",
                "varReplacer7": "int",
                "varReplacer8": "int",
                "varReplacer9": "java.lang.String",
                "varReplacer10": "java.lang.String",
                "varReplacer11": "int",
                "varReplacer12": "int",
                "varReplacer13": "int",
                "varReplacer14": "int",
                "varReplacer15": "java.lang.String",
                "varReplacer16": "int",
                "varReplacer17": "java.lang.String",
                "varReplacer18": "java.lang.String",
                "varReplacer19": "java.lang.String",
                "varReplacer20": "int",
                "varReplacer21": "int",
                "varReplacer22": "int",
                "varReplacer23": "int",
                "varReplacer24": "int",
                "varReplacer25": "java.lang.String",
                "varReplacer26": "java.lang.String"
            },
            "stackVariables": {
                "$stack2": "java.io.PrintStream",
                "$stack3": "java.lang.StringBuilder",
                "$stack4": "int",
                "$stack5": "java.lang.StringBuilder",
                "$stack6": "java.lang.String",
                "$stack8": "java.io.PrintStream",
                "$stack9": "java.lang.StringBuilder",
                "$stack10": "int",
                "$stack11": "java.lang.StringBuilder",
                "$stack12": "java.lang.String",
                "$stack14": "java.io.PrintStream",
                "$stack15": "java.lang.StringBuilder",
                "$stack16": "int",
                "$stack17": "java.lang.StringBuilder",
                "$stack18": "java.lang.String",
                "$stack20": "java.io.PrintStream",
                "$stack21": "java.lang.StringBuilder",
                "$stack22": "int",
                "$stack23": "java.lang.StringBuilder",
                "$stack24": "java.lang.String",
                "$stack26": "java.io.PrintStream",
                "$stack27": "java.lang.StringBuilder",
                "$stack28": "int",
                "$stack29": "java.lang.StringBuilder",
                "$stack30": "java.lang.String",
                "$stack32": "java.io.PrintStream",
                "$stack33": "java.lang.StringBuilder",
                "$stack34": "int",
                "$stack35": "java.lang.StringBuilder",
                "$stack36": "java.lang.String",
                "$stack38": "java.io.PrintStream",
                "$stack39": "java.lang.StringBuilder",
                "$stack40": "java.lang.String",
                "$stack41": "java.lang.StringBuilder",
                "$stack42": "java.lang.String",
                "$stack44": "java.io.PrintStream",
                "$stack45": "java.lang.StringBuilder",
                "$stack46": "java.lang.String",
                "$stack47": "java.lang.StringBuilder",
                "$stack48": "java.lang.String",
                "$u0": "java.lang.StringBuilder",
                "$u1": "java.lang.StringBuilder",
                "$u2": "java.lang.StringBuilder",
                "$u3": "java.lang.StringBuilder",
                "$u4": "java.lang.StringBuilder",
                "$u5": "java.lang.StringBuilder",
                "$u6": "java.lang.StringBuilder",
                "$u7": "java.lang.StringBuilder",
                "$i0": "int"
            },
            "invokeExpressions": [
                "<java.lang.StringBuilder: void <init>()>",
                "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
                "<de.fraunhofer.iem.basics.controlFlow.conditionAndLoops.JavaIf: int max1(int,int)>",
                "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
                "<java.lang.StringBuilder: java.lang.String toString()>",
                "<java.io.PrintStream: void println(java.lang.String)>",
                "<java.lang.StringBuilder: void <init>()>",
                "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
                "<de.fraunhofer.iem.basics.controlFlow.conditionAndLoops.JavaIf: int max1(int,int)>",
                "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
                "<java.lang.StringBuilder: java.lang.String toString()>",
                "<java.io.PrintStream: void println(java.lang.String)>",
                "<java.lang.StringBuilder: void <init>()>",
                "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
                "<de.fraunhofer.iem.basics.controlFlow.conditionAndLoops.JavaIf: int max2(int,int)>",
                "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
                "<java.lang.StringBuilder: java.lang.String toString()>",
                "<java.io.PrintStream: void println(java.lang.String)>",
                "<java.lang.StringBuilder: void <init>()>",
                "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
                "<de.fraunhofer.iem.basics.controlFlow.conditionAndLoops.JavaIf: int max2(int,int)>",
                "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
                "<java.lang.StringBuilder: java.lang.String toString()>",
                "<java.io.PrintStream: void println(java.lang.String)>",
                "<java.lang.StringBuilder: void <init>()>",
                "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
                "<de.fraunhofer.iem.basics.controlFlow.conditionAndLoops.JavaIf: int max3(int,int,int)>",
                "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
                "<java.lang.StringBuilder: java.lang.String toString()>",
                "<java.io.PrintStream: void println(java.lang.String)>",
                "<java.lang.StringBuilder: void <init>()>",
                "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
                "<de.fraunhofer.iem.basics.controlFlow.conditionAndLoops.JavaIf: int max3(int,int,int)>",
                "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
                "<java.lang.StringBuilder: java.lang.String toString()>",
                "<java.io.PrintStream: void println(java.lang.String)>",
                "<java.lang.StringBuilder: void <init>()>",
                "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
                "<de.fraunhofer.iem.basics.controlFlow.conditionAndLoops.JavaIf: java.lang.String sign(int)>",
                "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
                "<java.lang.StringBuilder: java.lang.String toString()>",
                "<java.io.PrintStream: void println(java.lang.String)>",
                "<java.lang.StringBuilder: void <init>()>",
                "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
                "<de.fraunhofer.iem.basics.controlFlow.conditionAndLoops.JavaIf: java.lang.String sign(int)>",
                "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
                "<java.lang.StringBuilder: java.lang.String toString()>",
                "<java.io.PrintStream: void println(java.lang.String)>"
            ]
        },
        "int max1(int,int)": {
            "localVariables": {
                "num1": "int",
                "num2": "int",
                "max": "int"
            },
            "stackVariables": {},
            "invokeExpressions": []
        },
        "int max2(int,int)": {
            "localVariables": {
                "num1": "int",
                "num2": "int",
                "max": "int"
            },
            "stackVariables": {},
            "invokeExpressions": []
        },
        "int max3(int,int,int)": {
            "localVariables": {
                "num1": "int",
                "num2": "int",
                "num3": "int",
                "max": "int"
            },
            "stackVariables": {},
            "invokeExpressions": []
        },
        "java.lang.String sign(int)": {
            "localVariables": {
                "num": "int",
                "sign": "char",
                "varReplacer27": "java.lang.String",
                "varReplacer28": "java.lang.String",
                "varReplacer29": "java.lang.String"
            },
            "stackVariables": {
                "$stack2": "java.lang.StringBuilder",
                "$stack3": "java.io.PrintStream",
                "$stack4": "java.lang.StringBuilder",
                "$stack5": "java.lang.StringBuilder",
                "$stack6": "java.lang.String",
                "$stack12": "java.lang.StringBuilder",
                "$stack13": "java.io.PrintStream",
                "$stack14": "java.lang.StringBuilder",
                "$stack15": "java.lang.StringBuilder",
                "$stack16": "java.lang.String",
                "$stack19": "java.lang.StringBuilder",
                "$stack20": "java.io.PrintStream",
                "$stack21": "java.lang.StringBuilder",
                "$stack22": "java.lang.StringBuilder",
                "$stack23": "java.lang.String",
                "$stack7": "java.lang.StringBuilder",
                "$stack8": "java.lang.StringBuilder",
                "$stack9": "java.lang.String",
                "$stack10": "java.lang.StringBuilder",
                "$stack11": "java.lang.String"
            },
            "invokeExpressions": [
                "<java.lang.StringBuilder: void <init>()>",
                "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
                "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
                "<java.lang.StringBuilder: java.lang.String toString()>",
                "<java.io.PrintStream: void println(java.lang.String)>",
                "<java.lang.StringBuilder: void <init>()>",
                "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
                "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
                "<java.lang.StringBuilder: java.lang.String toString()>",
                "<java.io.PrintStream: void println(java.lang.String)>",
                "<java.lang.StringBuilder: void <init>()>",
                "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
                "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
                "<java.lang.StringBuilder: java.lang.String toString()>",
                "<java.io.PrintStream: void println(java.lang.String)>",
                "<java.lang.StringBuilder: void <init>()>",
                "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
                "<java.lang.Integer: java.lang.String toString(int)>",
                "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
                "<java.lang.StringBuilder: java.lang.String toString()>"
            ]
        }
    }
}
