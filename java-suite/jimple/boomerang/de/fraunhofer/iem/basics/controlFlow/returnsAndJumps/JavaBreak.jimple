public class de.fraunhofer.iem.basics.controlFlow.returnsAndJumps.JavaBreak extends java.lang.Object
{

    public void <init>()
    {
        de.fraunhofer.iem.basics.controlFlow.returnsAndJumps.JavaBreak this;

        nop;

        this := @this: de.fraunhofer.iem.basics.controlFlow.returnsAndJumps.JavaBreak;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    private static void singleLoopBreak(int)
    {
        int range, i;
        java.io.PrintStream $stack2;

        nop;

        range := @parameter0: int;

        i = 0;

     label1:
        if i >= range goto label3;

        nop;

        if i != 5 goto label2;

        nop;

        goto label3;

     label2:
        nop;

        $stack2 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack2.<java.io.PrintStream: void println(int)>(i);

        i = i + 1;

        goto label1;

     label3:
        nop;

        return;
    }

    private static void doubleLoopBreak(int)
    {
        java.io.PrintStream $stack7;
        int range, $stack5, i, j;
        java.lang.StringBuilder $stack6, $stack8, $stack9, $stack10;
        java.lang.String $stack11, varReplacer72;

        nop;

        range := @parameter0: int;

        i = 0;

     label1:
        if i >= range goto label6;

        nop;

        if i != 5 goto label2;

        nop;

        goto label6;

     label2:
        nop;

        j = 0;

     label3:
        if j >= range goto label5;

        nop;

        $stack5 = j % 2;

        if $stack5 == 0 goto label4;

        nop;

        goto label5;

     label4:
        nop;

        $stack7 = <java.lang.System: java.io.PrintStream out>;

        $stack6 = new java.lang.StringBuilder;

        specialinvoke $stack6.<java.lang.StringBuilder: void <init>()>();

        $stack8 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i);

        varReplacer72 = " --> ";

        $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer72);

        $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(j);

        $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $stack7.<java.io.PrintStream: void println(java.lang.String)>($stack11);

        j = j + 1;

        goto label3;

     label5:
        nop;

        i = i + 1;

        goto label1;

     label6:
        nop;

        return;
    }

    private static void doubleLoopSingleBreak(int)
    {
        java.io.PrintStream $stack7;
        int range, $stack5, i, j;
        java.lang.StringBuilder $stack6, $stack8, $stack9, $stack10;
        java.lang.String $stack11, varReplacer73;

        nop;

        range := @parameter0: int;

        i = 0;

     label1:
        if i >= range goto label5;

        nop;

        j = 0;

     label2:
        if j >= range goto label4;

        nop;

        $stack5 = j % 2;

        if $stack5 == 0 goto label3;

        nop;

        goto label4;

     label3:
        nop;

        $stack7 = <java.lang.System: java.io.PrintStream out>;

        $stack6 = new java.lang.StringBuilder;

        specialinvoke $stack6.<java.lang.StringBuilder: void <init>()>();

        $stack8 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i);

        varReplacer73 = " --> ";

        $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer73);

        $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(j);

        $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $stack7.<java.io.PrintStream: void println(java.lang.String)>($stack11);

        j = j + 1;

        goto label2;

     label4:
        nop;

        i = i + 1;

        goto label1;

     label5:
        nop;

        return;
    }

    public static void main(java.lang.String[])
    {
        int varReplacer74, varReplacer75, varReplacer76;
        java.lang.String[] args;

        nop;

        args := @parameter0: java.lang.String[];

        varReplacer74 = 50;

        staticinvoke <de.fraunhofer.iem.basics.controlFlow.returnsAndJumps.JavaBreak: void singleLoopBreak(int)>(varReplacer74);

        varReplacer76 = 5;

        staticinvoke <de.fraunhofer.iem.basics.controlFlow.returnsAndJumps.JavaBreak: void doubleLoopBreak(int)>(varReplacer76);

        varReplacer75 = 5;

        staticinvoke <de.fraunhofer.iem.basics.controlFlow.returnsAndJumps.JavaBreak: void doubleLoopSingleBreak(int)>(varReplacer75);

        return;
    }
}
