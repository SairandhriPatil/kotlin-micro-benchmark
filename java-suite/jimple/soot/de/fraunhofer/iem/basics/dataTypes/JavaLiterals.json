{
    "className": "de.fraunhofer.iem.basics.dataTypes.JavaLiterals",
    "superClass": "java.lang.Object",
    "implementedInterface": [],
    "methodCount": 4,
    "methodsSignature": [
        "<de.fraunhofer.iem.basics.dataTypes.JavaLiterals: void <init>()>",
        "<de.fraunhofer.iem.basics.dataTypes.JavaLiterals: java.lang.Number getDynamicNumber(java.lang.String)>",
        "<de.fraunhofer.iem.basics.dataTypes.JavaLiterals: void main(java.lang.String[])>",
        "<de.fraunhofer.iem.basics.dataTypes.JavaLiterals: void printLiteralVariables(java.lang.Number)>"
    ],
    "methodsInformation": {
        "void <init>()": {
            "localVariables": {"this": "de.fraunhofer.iem.basics.dataTypes.JavaLiterals"},
            "stackVariables": {},
            "invokeExpressions": ["<java.lang.Object: void <init>()>"]
        },
        "java.lang.Number getDynamicNumber(java.lang.String)": {
            "localVariables": {"type": "java.lang.String"},
            "stackVariables": {
                "$stack3": "int",
                "$stack4": "boolean",
                "$stack5": "java.lang.Integer",
                "$stack6": "java.lang.Integer",
                "$stack7": "java.lang.Float",
                "$stack8": "java.lang.Float",
                "$stack9": "java.lang.Double",
                "$stack10": "java.lang.Double",
                "$stack11": "java.lang.Integer",
                "$stack12": "java.lang.Integer",
                "$stack13": "java.lang.Long",
                "$stack14": "java.lang.Integer",
                "$stack15": "java.lang.Integer",
                "$stack17": "boolean",
                "$stack18": "boolean",
                "$stack19": "boolean",
                "$stack20": "boolean",
                "$stack21": "boolean",
                "$stack22": "boolean",
                "$stack23": "boolean",
                "$stack24": "boolean",
                "$stack25": "boolean",
                "l2": "byte"
            },
            "invokeExpressions": [
                "<java.lang.String: int hashCode()>",
                "<java.lang.String: boolean equals(java.lang.Object)>",
                "<java.lang.String: boolean equals(java.lang.Object)>",
                "<java.lang.String: boolean equals(java.lang.Object)>",
                "<java.lang.String: boolean equals(java.lang.Object)>",
                "<java.lang.String: boolean equals(java.lang.Object)>",
                "<java.lang.String: boolean equals(java.lang.Object)>",
                "<java.lang.String: boolean equals(java.lang.Object)>",
                "<java.lang.String: boolean equals(java.lang.Object)>",
                "<java.lang.String: boolean equals(java.lang.Object)>",
                "<java.lang.String: boolean equals(java.lang.Object)>",
                "<java.lang.Integer: java.lang.Integer valueOf(int)>",
                "<java.lang.Long: java.lang.Long valueOf(long)>",
                "<java.lang.Integer: java.lang.Integer valueOf(int)>",
                "<java.lang.Integer: java.lang.Integer valueOf(int)>",
                "<java.lang.Double: java.lang.Double valueOf(double)>",
                "<java.lang.Double: java.lang.Double valueOf(double)>",
                "<java.lang.Float: java.lang.Float valueOf(float)>",
                "<java.lang.Float: java.lang.Float valueOf(float)>",
                "<java.lang.Integer: java.lang.Integer valueOf(int)>",
                "<java.lang.Integer: java.lang.Integer valueOf(int)>",
                "<java.lang.Integer: java.lang.Integer valueOf(int)>"
            ]
        },
        "void main(java.lang.String[])": {
            "localVariables": {
                "r3": "double",
                "r4": "double",
                "args": "java.lang.String[]"
            },
            "stackVariables": {
                "$stack16": "java.lang.Number",
                "$stack17": "java.lang.Integer",
                "$stack18": "int",
                "$stack19": "java.lang.Number",
                "$stack20": "java.lang.Long",
                "$stack21": "long",
                "$stack22": "java.lang.Number",
                "$stack23": "java.lang.Integer",
                "$stack24": "int",
                "$stack25": "java.lang.Number",
                "$stack26": "java.lang.Integer",
                "$stack27": "int",
                "$stack28": "java.lang.Number",
                "$stack29": "java.lang.Double",
                "$stack30": "double",
                "$stack31": "java.lang.Number",
                "$stack32": "java.lang.Double",
                "$stack33": "double",
                "$stack34": "java.lang.Number",
                "$stack35": "java.lang.Float",
                "$stack36": "float",
                "$stack37": "java.lang.Number",
                "$stack38": "java.lang.Float",
                "$stack39": "float",
                "$stack40": "java.lang.Number",
                "$stack41": "java.lang.Integer",
                "$stack42": "int",
                "$stack43": "java.lang.Number",
                "$stack44": "java.lang.Integer",
                "$stack45": "int",
                "$stack46": "java.lang.Integer",
                "$stack47": "java.lang.Long",
                "$stack48": "java.lang.Integer",
                "$stack49": "java.lang.Integer",
                "$stack50": "java.lang.Double",
                "$stack51": "java.lang.Double",
                "$stack52": "java.lang.Double",
                "$stack53": "java.lang.Double",
                "$stack54": "java.lang.Integer",
                "$stack55": "java.lang.Integer"
            },
            "invokeExpressions": [
                "<de.fraunhofer.iem.basics.dataTypes.JavaLiterals: java.lang.Number getDynamicNumber(java.lang.String)>",
                "<java.lang.Integer: int intValue()>",
                "<de.fraunhofer.iem.basics.dataTypes.JavaLiterals: java.lang.Number getDynamicNumber(java.lang.String)>",
                "<java.lang.Long: long longValue()>",
                "<de.fraunhofer.iem.basics.dataTypes.JavaLiterals: java.lang.Number getDynamicNumber(java.lang.String)>",
                "<java.lang.Integer: int intValue()>",
                "<de.fraunhofer.iem.basics.dataTypes.JavaLiterals: java.lang.Number getDynamicNumber(java.lang.String)>",
                "<java.lang.Integer: int intValue()>",
                "<de.fraunhofer.iem.basics.dataTypes.JavaLiterals: java.lang.Number getDynamicNumber(java.lang.String)>",
                "<java.lang.Double: double doubleValue()>",
                "<de.fraunhofer.iem.basics.dataTypes.JavaLiterals: java.lang.Number getDynamicNumber(java.lang.String)>",
                "<java.lang.Double: double doubleValue()>",
                "<de.fraunhofer.iem.basics.dataTypes.JavaLiterals: java.lang.Number getDynamicNumber(java.lang.String)>",
                "<java.lang.Float: float floatValue()>",
                "<de.fraunhofer.iem.basics.dataTypes.JavaLiterals: java.lang.Number getDynamicNumber(java.lang.String)>",
                "<java.lang.Float: float floatValue()>",
                "<de.fraunhofer.iem.basics.dataTypes.JavaLiterals: java.lang.Number getDynamicNumber(java.lang.String)>",
                "<java.lang.Integer: int intValue()>",
                "<de.fraunhofer.iem.basics.dataTypes.JavaLiterals: java.lang.Number getDynamicNumber(java.lang.String)>",
                "<java.lang.Integer: int intValue()>",
                "<java.lang.Integer: java.lang.Integer valueOf(int)>",
                "<de.fraunhofer.iem.basics.dataTypes.JavaLiterals: void printLiteralVariables(java.lang.Number)>",
                "<java.lang.Long: java.lang.Long valueOf(long)>",
                "<de.fraunhofer.iem.basics.dataTypes.JavaLiterals: void printLiteralVariables(java.lang.Number)>",
                "<java.lang.Integer: java.lang.Integer valueOf(int)>",
                "<de.fraunhofer.iem.basics.dataTypes.JavaLiterals: void printLiteralVariables(java.lang.Number)>",
                "<java.lang.Integer: java.lang.Integer valueOf(int)>",
                "<de.fraunhofer.iem.basics.dataTypes.JavaLiterals: void printLiteralVariables(java.lang.Number)>",
                "<java.lang.Double: java.lang.Double valueOf(double)>",
                "<de.fraunhofer.iem.basics.dataTypes.JavaLiterals: void printLiteralVariables(java.lang.Number)>",
                "<java.lang.Double: java.lang.Double valueOf(double)>",
                "<de.fraunhofer.iem.basics.dataTypes.JavaLiterals: void printLiteralVariables(java.lang.Number)>",
                "<java.lang.Double: java.lang.Double valueOf(double)>",
                "<de.fraunhofer.iem.basics.dataTypes.JavaLiterals: void printLiteralVariables(java.lang.Number)>",
                "<java.lang.Double: java.lang.Double valueOf(double)>",
                "<de.fraunhofer.iem.basics.dataTypes.JavaLiterals: void printLiteralVariables(java.lang.Number)>",
                "<java.lang.Integer: java.lang.Integer valueOf(int)>",
                "<de.fraunhofer.iem.basics.dataTypes.JavaLiterals: void printLiteralVariables(java.lang.Number)>",
                "<java.lang.Integer: java.lang.Integer valueOf(int)>",
                "<de.fraunhofer.iem.basics.dataTypes.JavaLiterals: void printLiteralVariables(java.lang.Number)>"
            ]
        },
        "void printLiteralVariables(java.lang.Number)": {
            "localVariables": {"n": "java.lang.Number"},
            "stackVariables": {
                "$stack1": "java.lang.StringBuilder",
                "$stack2": "java.io.PrintStream",
                "$stack3": "java.lang.StringBuilder",
                "$stack4": "java.lang.StringBuilder",
                "$stack5": "java.lang.Class",
                "$stack6": "java.lang.String",
                "$stack7": "java.lang.StringBuilder",
                "$stack8": "java.lang.StringBuilder",
                "$stack9": "java.lang.String"
            },
            "invokeExpressions": [
                "<java.lang.StringBuilder: void <init>()>",
                "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
                "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
                "<java.lang.Object: java.lang.Class getClass()>",
                "<java.lang.Class: java.lang.String getName()>",
                "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
                "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
                "<java.lang.StringBuilder: java.lang.String toString()>",
                "<java.io.PrintStream: void println(java.lang.String)>"
            ]
        }
    }
}
