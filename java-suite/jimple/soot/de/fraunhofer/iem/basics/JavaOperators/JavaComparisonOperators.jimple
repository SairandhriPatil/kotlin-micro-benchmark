public class de.fraunhofer.iem.basics.JavaOperators.JavaComparisonOperators extends java.lang.Object
{

    public void <init>()
    {
        de.fraunhofer.iem.basics.JavaOperators.JavaComparisonOperators this;

        this := @this: de.fraunhofer.iem.basics.JavaOperators.JavaComparisonOperators;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public static void main(java.lang.String[])
    {
        java.lang.Integer $stack29, $stack30;
        byte $stack17, $stack19, $stack21, $stack23, $stack25, $stack27;
        boolean $stack66, $stack63, $stack60, $stack57, $stack54, $stack49, $stack46, $stack43, $stack40, $stack37, $stack34, $stack31;
        java.lang.String[] args;
        int $stack7, $stack8, $i0, $i1, $i2, $i3;
        double $stack15, $stack16;
        java.io.PrintStream $stack9, $stack10, $stack11, $stack12, $stack13, $stack14, $stack18, $stack20, $stack22, $stack24, $stack26, $stack28;

        args := @parameter0: java.lang.String[];

        $stack7 = staticinvoke <de.fraunhofer.iem.basics.JavaOperators.JavaComparisonOperators: int getInt(java.lang.String)>("int");

        $stack8 = staticinvoke <de.fraunhofer.iem.basics.JavaOperators.JavaComparisonOperators: int getInt(java.lang.String)>("int");

        $stack9 = <java.lang.System: java.io.PrintStream out>;

        if $stack7 <= $stack8 goto label01;

        $stack66 = 1;

        goto label02;

     label01:
        $stack66 = 0;

     label02:
        virtualinvoke $stack9.<java.io.PrintStream: void println(boolean)>($stack66);

        $stack10 = <java.lang.System: java.io.PrintStream out>;

        if $stack7 >= $stack8 goto label03;

        $stack63 = 1;

        goto label04;

     label03:
        $stack63 = 0;

     label04:
        virtualinvoke $stack10.<java.io.PrintStream: void println(boolean)>($stack63);

        $stack11 = <java.lang.System: java.io.PrintStream out>;

        if $stack7 < $stack8 goto label05;

        $stack60 = 1;

        goto label06;

     label05:
        $stack60 = 0;

     label06:
        virtualinvoke $stack11.<java.io.PrintStream: void println(boolean)>($stack60);

        $stack12 = <java.lang.System: java.io.PrintStream out>;

        if $stack7 > $stack8 goto label07;

        $stack57 = 1;

        goto label08;

     label07:
        $stack57 = 0;

     label08:
        virtualinvoke $stack12.<java.io.PrintStream: void println(boolean)>($stack57);

        $stack13 = <java.lang.System: java.io.PrintStream out>;

        if $stack7 != $stack8 goto label09;

        $stack54 = 1;

        goto label10;

     label09:
        $stack54 = 0;

     label10:
        virtualinvoke $stack13.<java.io.PrintStream: void println(boolean)>($stack54);

        $stack14 = <java.lang.System: java.io.PrintStream out>;

        if $stack7 == $stack8 goto label11;

        $stack49 = 1;

        goto label12;

     label11:
        $stack49 = 0;

     label12:
        virtualinvoke $stack14.<java.io.PrintStream: void println(boolean)>($stack49);

        $stack15 = staticinvoke <de.fraunhofer.iem.basics.JavaOperators.JavaComparisonOperators: double getDouble(java.lang.String)>("double");

        $stack16 = staticinvoke <de.fraunhofer.iem.basics.JavaOperators.JavaComparisonOperators: double getDouble(java.lang.String)>("double");

        $stack18 = <java.lang.System: java.io.PrintStream out>;

        $stack17 = $stack15 cmpl $stack16;

        $i0 = (int) $stack17;

        if $i0 <= 0 goto label13;

        $stack46 = 1;

        goto label14;

     label13:
        $stack46 = 0;

     label14:
        virtualinvoke $stack18.<java.io.PrintStream: void println(boolean)>($stack46);

        $stack20 = <java.lang.System: java.io.PrintStream out>;

        $stack19 = $stack15 cmpg $stack16;

        $i1 = (int) $stack19;

        if $i1 >= 0 goto label15;

        $stack43 = 1;

        goto label16;

     label15:
        $stack43 = 0;

     label16:
        virtualinvoke $stack20.<java.io.PrintStream: void println(boolean)>($stack43);

        $stack22 = <java.lang.System: java.io.PrintStream out>;

        $stack21 = $stack15 cmpl $stack16;

        $i2 = (int) $stack21;

        if $i2 < 0 goto label17;

        $stack40 = 1;

        goto label18;

     label17:
        $stack40 = 0;

     label18:
        virtualinvoke $stack22.<java.io.PrintStream: void println(boolean)>($stack40);

        $stack24 = <java.lang.System: java.io.PrintStream out>;

        $stack23 = $stack15 cmpg $stack16;

        $i3 = (int) $stack23;

        if $i3 > 0 goto label19;

        $stack37 = 1;

        goto label20;

     label19:
        $stack37 = 0;

     label20:
        virtualinvoke $stack24.<java.io.PrintStream: void println(boolean)>($stack37);

        $stack26 = <java.lang.System: java.io.PrintStream out>;

        $stack25 = $stack15 cmpl $stack16;

        if $stack25 != 0 goto label21;

        $stack34 = 1;

        goto label22;

     label21:
        $stack34 = 0;

     label22:
        virtualinvoke $stack26.<java.io.PrintStream: void println(boolean)>($stack34);

        $stack28 = <java.lang.System: java.io.PrintStream out>;

        $stack27 = $stack15 cmpl $stack16;

        if $stack27 == 0 goto label23;

        $stack31 = 1;

        goto label24;

     label23:
        $stack31 = 0;

     label24:
        virtualinvoke $stack28.<java.io.PrintStream: void println(boolean)>($stack31);

        $stack29 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(102);

        $stack30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2020);

        staticinvoke <de.fraunhofer.iem.basics.JavaOperators.JavaComparisonOperators: void dummy(java.lang.Object,java.lang.Object)>($stack29, $stack30);

        return;
    }

    private static void dummy(java.lang.Object, java.lang.Object)
    {
        java.io.PrintStream $stack2, $stack3;
        java.lang.Object num1, num2;
        boolean $stack5, $stack4;

        num1 := @parameter0: java.lang.Object;

        num2 := @parameter1: java.lang.Object;

        $stack2 = <java.lang.System: java.io.PrintStream out>;

        if num1 != num2 goto label1;

        $stack5 = 1;

        goto label2;

     label1:
        $stack5 = 0;

     label2:
        virtualinvoke $stack2.<java.io.PrintStream: void println(boolean)>($stack5);

        $stack3 = <java.lang.System: java.io.PrintStream out>;

        if num1 == num2 goto label3;

        $stack4 = 1;

        goto label4;

     label3:
        $stack4 = 0;

     label4:
        virtualinvoke $stack3.<java.io.PrintStream: void println(boolean)>($stack4);

        return;
    }

    public static double getDouble(java.lang.String)
    {
        java.lang.String str;
        boolean $stack1;

        str := @parameter0: java.lang.String;

        $stack1 = virtualinvoke str.<java.lang.String: boolean equals(java.lang.Object)>("int");

        if $stack1 == 0 goto label1;

        return 50.2;

     label1:
        return 150.5;
    }

    public static int getInt(java.lang.String)
    {
        java.lang.String str;
        boolean $stack1;

        str := @parameter0: java.lang.String;

        $stack1 = virtualinvoke str.<java.lang.String: boolean equals(java.lang.Object)>("int");

        if $stack1 == 0 goto label1;

        return 50;

     label1:
        return 150;
    }
}
