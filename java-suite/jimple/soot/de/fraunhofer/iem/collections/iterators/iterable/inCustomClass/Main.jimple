public class de.fraunhofer.iem.collections.iterators.iterable.inCustomClass.Main extends java.lang.Object
{

    public void <init>()
    {
        de.fraunhofer.iem.collections.iterators.iterable.inCustomClass.Main this;

        this := @this: de.fraunhofer.iem.collections.iterators.iterable.inCustomClass.Main;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public static void main(java.lang.String[])
    {
        java.io.PrintStream $stack8, $stack14, $stack15, $stack20;
        java.lang.UnsupportedOperationException $stack19;
        java.util.Iterator $stack6;
        de.fraunhofer.iem.collections.iterators.iterable.inCustomClass.FiveInts $stack5;
        java.lang.String[] args;
        java.lang.Integer $stack12;
        java.util.function.Consumer $stack10, $stack17;
        int $stack13;
        java.lang.Object $stack11;
        boolean $stack7;

        args := @parameter0: java.lang.String[];

        $stack5 = new de.fraunhofer.iem.collections.iterators.iterable.inCustomClass.FiveInts;

        specialinvoke $stack5.<de.fraunhofer.iem.collections.iterators.iterable.inCustomClass.FiveInts: void <init>(int,int,int,int,int)>(1, 2, 3, 4, 5);

        $stack6 = virtualinvoke $stack5.<de.fraunhofer.iem.collections.iterators.iterable.inCustomClass.FiveInts: java.util.Iterator iterator()>();

     label1:
        $stack7 = interfaceinvoke $stack6.<java.util.Iterator: boolean hasNext()>();

        if $stack7 == 0 goto label6;

        $stack11 = interfaceinvoke $stack6.<java.util.Iterator: java.lang.Object next()>();

        $stack12 = (java.lang.Integer) $stack11;

        $stack13 = virtualinvoke $stack12.<java.lang.Integer: int intValue()>();

        $stack14 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack14.<java.io.PrintStream: void println(int)>($stack13);

     label2:
        interfaceinvoke $stack6.<java.util.Iterator: void remove()>();

     label3:
        goto label5;

     label4:
        $stack19 := @caughtexception;

        $stack20 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack20.<java.io.PrintStream: void println(java.lang.String)>("Remove function can not be called on FiveInts");

     label5:
        $stack15 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack15.<java.lang.Object: java.lang.Class getClass()>();

        $stack17 = staticinvoke <de.fraunhofer.iem.collections.iterators.iterable.inCustomClass.Main$println__2: java.util.function.Consumer bootstrap$(java.io.PrintStream)>($stack15);

        interfaceinvoke $stack6.<java.util.Iterator: void forEachRemaining(java.util.function.Consumer)>($stack17);

        goto label1;

     label6:
        $stack8 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack8.<java.lang.Object: java.lang.Class getClass()>();

        $stack10 = staticinvoke <de.fraunhofer.iem.collections.iterators.iterable.inCustomClass.Main$println__1: java.util.function.Consumer bootstrap$(java.io.PrintStream)>($stack8);

        virtualinvoke $stack5.<de.fraunhofer.iem.collections.iterators.iterable.inCustomClass.FiveInts: void forEach(java.util.function.Consumer)>($stack10);

        return;

        catch java.lang.UnsupportedOperationException from label2 to label3 with label4;
    }
}
