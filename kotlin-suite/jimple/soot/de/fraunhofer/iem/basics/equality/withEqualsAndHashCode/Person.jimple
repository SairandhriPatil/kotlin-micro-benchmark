public final class de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person extends java.lang.Object
{
    private java.lang.String name;
    private java.lang.String address;
    private int age;
    private java.lang.String mobileNumber;

    public void <init>(java.lang.String, java.lang.String, int, java.lang.String)
    {
        de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person this;
        int age;
        java.lang.String name, address, mobileNumber;

        this := @this: de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person;

        name := @parameter0: java.lang.String;

        address := @parameter1: java.lang.String;

        age := @parameter2: int;

        mobileNumber := @parameter3: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(name, "name");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(address, "address");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(mobileNumber, "mobileNumber");

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person: java.lang.String name> = name;

        this.<de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person: java.lang.String address> = address;

        this.<de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person: int age> = age;

        this.<de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person: java.lang.String mobileNumber> = mobileNumber;

        return;
    }

    public final java.lang.String getName()
    {
        java.lang.String $stack1;
        de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person this;

        this := @this: de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person;

        $stack1 = this.<de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person: java.lang.String name>;

        return $stack1;
    }

    public final void setName(java.lang.String)
    {
        java.lang.String <set-?>;
        de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person this;

        this := @this: de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person;

        <set-?> := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(<set-?>, "<set-?>");

        this.<de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person: java.lang.String name> = <set-?>;

        return;
    }

    public final java.lang.String getAddress()
    {
        java.lang.String $stack1;
        de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person this;

        this := @this: de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person;

        $stack1 = this.<de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person: java.lang.String address>;

        return $stack1;
    }

    public final void setAddress(java.lang.String)
    {
        java.lang.String <set-?>;
        de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person this;

        this := @this: de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person;

        <set-?> := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(<set-?>, "<set-?>");

        this.<de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person: java.lang.String address> = <set-?>;

        return;
    }

    public final int getAge()
    {
        int $stack1;
        de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person this;

        this := @this: de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person;

        $stack1 = this.<de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person: int age>;

        return $stack1;
    }

    public final void setAge(int)
    {
        int <set-?>;
        de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person this;

        this := @this: de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person;

        <set-?> := @parameter0: int;

        this.<de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person: int age> = <set-?>;

        return;
    }

    public final java.lang.String getMobileNumber()
    {
        java.lang.String $stack1;
        de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person this;

        this := @this: de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person;

        $stack1 = this.<de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person: java.lang.String mobileNumber>;

        return $stack1;
    }

    public final void setMobileNumber(java.lang.String)
    {
        java.lang.String <set-?>;
        de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person this;

        this := @this: de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person;

        <set-?> := @parameter0: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(<set-?>, "<set-?>");

        this.<de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person: java.lang.String mobileNumber> = <set-?>;

        return;
    }

    public final java.lang.String component1()
    {
        java.lang.String $stack1;
        de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person this;

        this := @this: de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person;

        $stack1 = this.<de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person: java.lang.String name>;

        return $stack1;
    }

    public final java.lang.String component2()
    {
        java.lang.String $stack1;
        de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person this;

        this := @this: de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person;

        $stack1 = this.<de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person: java.lang.String address>;

        return $stack1;
    }

    public final int component3()
    {
        int $stack1;
        de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person this;

        this := @this: de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person;

        $stack1 = this.<de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person: int age>;

        return $stack1;
    }

    public final java.lang.String component4()
    {
        java.lang.String $stack1;
        de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person this;

        this := @this: de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person;

        $stack1 = this.<de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person: java.lang.String mobileNumber>;

        return $stack1;
    }

    public final de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person copy(java.lang.String, java.lang.String, int, java.lang.String)
    {
        de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person $stack5, this;
        int age;
        java.lang.String name, address, mobileNumber;

        this := @this: de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person;

        name := @parameter0: java.lang.String;

        address := @parameter1: java.lang.String;

        age := @parameter2: int;

        mobileNumber := @parameter3: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(name, "name");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(address, "address");

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(mobileNumber, "mobileNumber");

        $stack5 = new de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person;

        specialinvoke $stack5.<de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person: void <init>(java.lang.String,java.lang.String,int,java.lang.String)>(name, address, age, mobileNumber);

        return $stack5;
    }

    public static de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person copy$default(de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person, java.lang.String, java.lang.String, int, java.lang.String, int, java.lang.Object)
    {
        de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person l0, $stack11;
        int l5, $stack7, $stack8, $stack9, $stack10, l3;
        java.lang.Object l6;
        java.lang.String l1, l2, l4;

        l0 := @parameter0: de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person;

        l1 := @parameter1: java.lang.String;

        l2 := @parameter2: java.lang.String;

        l3 := @parameter3: int;

        l4 := @parameter4: java.lang.String;

        l5 := @parameter5: int;

        l6 := @parameter6: java.lang.Object;

        $stack7 = l5 & 1;

        if $stack7 == 0 goto label1;

        l1 = l0.<de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person: java.lang.String name>;

     label1:
        $stack8 = l5 & 2;

        if $stack8 == 0 goto label2;

        l2 = l0.<de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person: java.lang.String address>;

     label2:
        $stack9 = l5 & 4;

        if $stack9 == 0 goto label3;

        l3 = l0.<de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person: int age>;

     label3:
        $stack10 = l5 & 8;

        if $stack10 == 0 goto label4;

        l4 = l0.<de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person: java.lang.String mobileNumber>;

     label4:
        $stack11 = virtualinvoke l0.<de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person: de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person copy(java.lang.String,java.lang.String,int,java.lang.String)>(l1, l2, l3, l4);

        return $stack11;
    }

    public java.lang.String toString()
    {
        int $stack9;
        java.lang.String $stack3, $stack6, $stack12, $stack15;
        de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person this;
        java.lang.StringBuilder $stack1, $stack2, $stack4, $stack5, $stack7, $stack8, $stack10, $stack11, $stack13, $stack14;

        this := @this: de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person;

        $stack1 = new java.lang.StringBuilder;

        specialinvoke $stack1.<java.lang.StringBuilder: void <init>()>();

        $stack2 = virtualinvoke $stack1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Person(name=");

        $stack3 = this.<de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person: java.lang.String name>;

        $stack4 = virtualinvoke $stack2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack3);

        $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", address=");

        $stack6 = this.<de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person: java.lang.String address>;

        $stack7 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack6);

        $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", age=");

        $stack9 = this.<de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person: int age>;

        $stack10 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack9);

        $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mobileNumber=");

        $stack12 = this.<de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person: java.lang.String mobileNumber>;

        $stack13 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack12);

        $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack15;
    }

    public int hashCode()
    {
        de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person this;
        int $stack3, $stack5, $stack6, $stack7, $stack8, $stack9, $stack11, $stack12, result;
        java.lang.String $stack2, $stack4, $stack10;

        this := @this: de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person;

        $stack2 = this.<de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person: java.lang.String name>;

        $stack3 = virtualinvoke $stack2.<java.lang.String: int hashCode()>();

        $stack5 = $stack3 * 31;

        $stack4 = this.<de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person: java.lang.String address>;

        $stack6 = virtualinvoke $stack4.<java.lang.String: int hashCode()>();

        result = $stack5 + $stack6;

        $stack8 = result * 31;

        $stack7 = this.<de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person: int age>;

        $stack9 = staticinvoke <java.lang.Integer: int hashCode(int)>($stack7);

        result = $stack8 + $stack9;

        $stack11 = result * 31;

        $stack10 = this.<de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person: java.lang.String mobileNumber>;

        $stack12 = virtualinvoke $stack10.<java.lang.String: int hashCode()>();

        result = $stack11 + $stack12;

        return result;
    }

    public boolean equals(java.lang.Object)
    {
        de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person this, l2;
        int $stack10, $stack11;
        java.lang.Object other;
        java.lang.String $stack4, $stack5, $stack7, $stack8, $stack12, $stack13;
        boolean $stack3, $stack6, $stack9, $stack14;

        this := @this: de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person;

        other := @parameter0: java.lang.Object;

        if this != other goto label1;

        return 1;

     label1:
        $stack3 = other instanceof de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person;

        if $stack3 != 0 goto label2;

        return 0;

     label2:
        l2 = (de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person) other;

        $stack5 = this.<de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person: java.lang.String name>;

        $stack4 = l2.<de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person: java.lang.String name>;

        $stack6 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($stack5, $stack4);

        if $stack6 != 0 goto label3;

        return 0;

     label3:
        $stack8 = this.<de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person: java.lang.String address>;

        $stack7 = l2.<de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person: java.lang.String address>;

        $stack9 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($stack8, $stack7);

        if $stack9 != 0 goto label4;

        return 0;

     label4:
        $stack11 = this.<de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person: int age>;

        $stack10 = l2.<de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person: int age>;

        if $stack11 == $stack10 goto label5;

        return 0;

     label5:
        $stack13 = this.<de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person: java.lang.String mobileNumber>;

        $stack12 = l2.<de.fraunhofer.iem.basics.equality.withEqualsAndHashCode.Person: java.lang.String mobileNumber>;

        $stack14 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($stack13, $stack12);

        if $stack14 != 0 goto label6;

        return 0;

     label6:
        return 1;
    }
}
