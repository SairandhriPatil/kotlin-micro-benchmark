{
    "className": "de.fraunhofer.iem.examplesForReport.CommandInjectionExampleKt",
    "superClass": "java.lang.Object",
    "implementedInterface": [],
    "methodCount": 4,
    "methodsSignature": [
        "<de.fraunhofer.iem.examplesForReport.CommandInjectionExampleKt: void runTheJobInShell()>",
        "<de.fraunhofer.iem.examplesForReport.CommandInjectionExampleKt: void printProcessedUserName(java.lang.Process)>",
        "<de.fraunhofer.iem.examplesForReport.CommandInjectionExampleKt: void main()>",
        "<de.fraunhofer.iem.examplesForReport.CommandInjectionExampleKt: void main(java.lang.String[])>"
    ],
    "methodsInformation": {
        "void runTheJobInShell()": {
            "localVariables": {
                "executable": "java.lang.String",
                "argument1": "java.lang.String"
            },
            "stackVariables": {
                "$stack8": "java.io.PrintStream",
                "$stack9": "java.lang.String",
                "$stack10": "java.lang.String",
                "$stack11": "java.lang.CharSequence",
                "$stack12": "int",
                "$stack15": "java.lang.String",
                "$stack16": "java.lang.Process",
                "$stack18": "java.lang.String[]",
                "$stack33": "java.io.IOException",
                "$stack35": "java.lang.String",
                "$stack36": "java.lang.String",
                "$stack37": "java.io.PrintStream",
                "$u0": "java.lang.ProcessBuilder",
                "$i0": "int"
            },
            "invokeExpressions": [
                "<java.io.PrintStream: void print(java.lang.Object)>",
                "<kotlin.io.ConsoleKt: java.lang.String readLine()>",
                "<java.lang.System: java.lang.String getProperty(java.lang.String)>",
                "<kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>",
                "<kotlin.text.StringsKt: int indexOf$default(java.lang.CharSequence,java.lang.String,int,boolean,int,java.lang.Object)>",
                "<kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>",
                "<java.lang.ProcessBuilder: void <init>(java.lang.String[])>",
                "<java.lang.ProcessBuilder: java.lang.Process start()>",
                "<kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)>",
                "<de.fraunhofer.iem.examplesForReport.CommandInjectionExampleKt: void printProcessedUserName(java.lang.Process)>",
                "<java.lang.Throwable: java.lang.String getMessage()>",
                "<kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>",
                "<java.io.PrintStream: void println(java.lang.Object)>"
            ]
        },
        "void printProcessedUserName(java.lang.Process)": {
            "localVariables": {"proc": "java.lang.Process"},
            "stackVariables": {
                "$stack8": "java.io.BufferedReader",
                "$stack9": "java.io.InputStreamReader",
                "$stack10": "java.io.InputStream",
                "$stack11": "java.io.Reader",
                "$stack12": "java.lang.String",
                "$stack13": "java.io.PrintStream",
                "$stack21": "java.io.IOException",
                "$stack22": "java.io.PrintStream"
            },
            "invokeExpressions": [
                "<java.lang.Process: java.io.InputStream getInputStream()>",
                "<java.io.InputStreamReader: void <init>(java.io.InputStream)>",
                "<java.io.BufferedReader: void <init>(java.io.Reader)>",
                "<java.io.BufferedReader: java.lang.String readLine()>",
                "<java.io.PrintStream: void println(java.lang.Object)>",
                "<java.io.PrintStream: void println(java.lang.Object)>"
            ]
        },
        "void main()": {
            "localVariables": {},
            "stackVariables": {},
            "invokeExpressions": ["<de.fraunhofer.iem.examplesForReport.CommandInjectionExampleKt: void runTheJobInShell()>"]
        },
        "void main(java.lang.String[])": {
            "localVariables": {"args": "java.lang.String[]"},
            "stackVariables": {},
            "invokeExpressions": ["<de.fraunhofer.iem.examplesForReport.CommandInjectionExampleKt: void main()>"]
        }
    }
}
