public final class de.fraunhofer.iem.uniqueToKotlin.highOrderFunctions.withInvokeDynamicCompilerOption.functionTypes.MainKt extends java.lang.Object
{

    public static final void main()
    {
        java.io.PrintStream $stack6, $stack9;
        kotlin.jvm.functions.Function3 $stack11;
        kotlin.jvm.functions.Function2 $stack3, $stack10;
        java.lang.Integer $stack4;
        kotlin.jvm.functions.Function0 $stack7;
        java.lang.Object $stack5, $stack8;
        java.lang.String res;

        $stack3 = staticinvoke <de.fraunhofer.iem.uniqueToKotlin.highOrderFunctions.withInvokeDynamicCompilerOption.functionTypes.MainKt: kotlin.jvm.functions.Function2 giveFun1()>();

        $stack4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        $stack5 = interfaceinvoke $stack3.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($stack4, "Fun1");

        $stack6 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack6.<java.io.PrintStream: void println(java.lang.Object)>($stack5);

        $stack7 = staticinvoke <de.fraunhofer.iem.uniqueToKotlin.highOrderFunctions.withInvokeDynamicCompilerOption.functionTypes.MainKt: kotlin.jvm.functions.Function0 giveFun2()>();

        $stack8 = interfaceinvoke $stack7.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        res = (java.lang.String) $stack8;

        $stack9 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack9.<java.io.PrintStream: void println(java.lang.Object)>(res);

        $stack10 = staticinvoke <de.fraunhofer.iem.uniqueToKotlin.highOrderFunctions.withInvokeDynamicCompilerOption.functionTypes.MainKt$main_lambda-0__3: kotlin.jvm.functions.Function2 bootstrap$()>();

        staticinvoke <de.fraunhofer.iem.uniqueToKotlin.highOrderFunctions.withInvokeDynamicCompilerOption.functionTypes.MainKt: void runFun3(kotlin.jvm.functions.Function2)>($stack10);

        $stack11 = staticinvoke <de.fraunhofer.iem.uniqueToKotlin.highOrderFunctions.withInvokeDynamicCompilerOption.functionTypes.MainKt$main_lambda-1__4: kotlin.jvm.functions.Function3 bootstrap$()>();

        staticinvoke <de.fraunhofer.iem.uniqueToKotlin.highOrderFunctions.withInvokeDynamicCompilerOption.functionTypes.MainKt: void runFun4(kotlin.jvm.functions.Function3)>($stack11);

        staticinvoke <de.fraunhofer.iem.uniqueToKotlin.highOrderFunctions.withInvokeDynamicCompilerOption.functionTypes.MainKt: void runFun5(kotlin.jvm.functions.Function2)>($stack10);

        staticinvoke <de.fraunhofer.iem.uniqueToKotlin.highOrderFunctions.withInvokeDynamicCompilerOption.functionTypes.MainKt: void runFun5(kotlin.jvm.functions.Function2)>(null);

        return;
    }

    public static final kotlin.jvm.functions.Function2 giveFun1()
    {
        kotlin.jvm.functions.Function2 $stack0;

        $stack0 = staticinvoke <de.fraunhofer.iem.uniqueToKotlin.highOrderFunctions.withInvokeDynamicCompilerOption.functionTypes.MainKt$giveFun1_lambda-2__5: kotlin.jvm.functions.Function2 bootstrap$()>();

        return $stack0;
    }

    public static final kotlin.jvm.functions.Function0 giveFun2()
    {
        kotlin.jvm.functions.Function0 $stack1;

        $stack1 = staticinvoke <de.fraunhofer.iem.uniqueToKotlin.highOrderFunctions.withInvokeDynamicCompilerOption.functionTypes.MainKt$giveFun2_lambda-3__6: kotlin.jvm.functions.Function0 bootstrap$()>();

        return $stack1;
    }

    public static final void runFun3(kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 fun3;
        java.lang.Integer $stack1, $stack3;

        fun3 := @parameter0: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(fun3, "fun3");

        $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        interfaceinvoke fun3.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($stack1, "Fun3");

        $stack3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        interfaceinvoke fun3.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($stack3, "Fun3");

        return;
    }

    public static final void runFun4(kotlin.jvm.functions.Function3)
    {
        java.io.PrintStream $stack6, $stack10;
        kotlin.jvm.functions.Function3 fun4;
        java.lang.Integer $stack3, $stack4, $stack7, $stack8;
        java.lang.Object $stack5, $stack9;

        fun4 := @parameter0: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(fun4, "fun4");

        $stack3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $stack4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        $stack5 = interfaceinvoke fun4.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($stack3, $stack4, "Fun3");

        $stack6 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack6.<java.io.PrintStream: void println(java.lang.Object)>($stack5);

        $stack7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $stack8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        $stack9 = interfaceinvoke fun4.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($stack7, $stack8, "Fun3");

        $stack10 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack10.<java.io.PrintStream: void println(java.lang.Object)>($stack9);

        return;
    }

    public static final void runFun5(kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 fun3;
        java.lang.Integer $stack2;

        fun3 := @parameter0: kotlin.jvm.functions.Function2;

        if fun3 != null goto label1;

        goto label2;

     label1:
        $stack2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        interfaceinvoke fun3.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($stack2, "Fun3");

     label2:
        return;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] args;

        args := @parameter0: java.lang.String[];

        staticinvoke <de.fraunhofer.iem.uniqueToKotlin.highOrderFunctions.withInvokeDynamicCompilerOption.functionTypes.MainKt: void main()>();

        return;
    }

    public static final kotlin.Unit main$lambda-0(int, java.lang.String)
    {
        java.io.PrintStream $stack9;
        kotlin.Unit $stack10;
        int a;
        java.lang.StringBuilder $stack4, $stack5, $stack6, $stack7;
        java.lang.String b, $stack8;

        a := @parameter0: int;

        b := @parameter1: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(b, "b");

        $stack4 = new java.lang.StringBuilder;

        specialinvoke $stack4.<java.lang.StringBuilder: void <init>()>();

        $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(a);

        $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = ");

        $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(b);

        $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack9 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack9.<java.io.PrintStream: void println(java.lang.Object)>($stack8);

        $stack10 = <kotlin.Unit: kotlin.Unit INSTANCE>;

        return $stack10;
    }

    public static final java.lang.String main$lambda-1(int, int, java.lang.String)
    {
        int $receiver, a;
        java.lang.StringBuilder $stack3, $stack4, $stack5, $stack6, $stack7, $stack8, $stack9;
        java.lang.String b, $stack10;

        $receiver := @parameter0: int;

        a := @parameter1: int;

        b := @parameter2: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(b, "b");

        $stack3 = new java.lang.StringBuilder;

        specialinvoke $stack3.<java.lang.StringBuilder: void <init>()>();

        $stack4 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($receiver);

        $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".(");

        $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(a);

        $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = ");

        $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(b);

        $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack10;
    }

    public static final java.lang.String giveFun1$lambda-2(int, java.lang.String)
    {
        int a;
        java.lang.StringBuilder $stack2, $stack3, $stack4, $stack5;
        java.lang.String b, $stack6;

        a := @parameter0: int;

        b := @parameter1: java.lang.String;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(b, "b");

        $stack2 = new java.lang.StringBuilder;

        specialinvoke $stack2.<java.lang.StringBuilder: void <init>()>();

        $stack3 = virtualinvoke $stack2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(a);

        $stack4 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = ");

        $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(b);

        $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack6;
    }

    public static final java.lang.String giveFun2$lambda-3()
    {
        return "Fun2";
    }
}
