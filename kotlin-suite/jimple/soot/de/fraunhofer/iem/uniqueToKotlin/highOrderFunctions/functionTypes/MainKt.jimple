public final class de.fraunhofer.iem.uniqueToKotlin.highOrderFunctions.functionTypes.MainKt extends java.lang.Object
{

    public static final void main()
    {
        java.io.PrintStream $stack6, $stack9;
        de.fraunhofer.iem.uniqueToKotlin.highOrderFunctions.functionTypes.MainKt$main$fun3$1 $stack10;
        kotlin.jvm.functions.Function3 $stack12;
        kotlin.jvm.functions.Function2 $stack3, fun3;
        java.lang.Integer $stack4;
        kotlin.jvm.functions.Function0 $stack7;
        de.fraunhofer.iem.uniqueToKotlin.highOrderFunctions.functionTypes.MainKt$main$1 $stack11;
        java.lang.Object $stack5, $stack8;
        java.lang.String res;

        $stack3 = staticinvoke <de.fraunhofer.iem.uniqueToKotlin.highOrderFunctions.functionTypes.MainKt: kotlin.jvm.functions.Function2 giveFun1()>();

        $stack4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        $stack5 = interfaceinvoke $stack3.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($stack4, "Fun1");

        $stack6 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack6.<java.io.PrintStream: void println(java.lang.Object)>($stack5);

        $stack7 = staticinvoke <de.fraunhofer.iem.uniqueToKotlin.highOrderFunctions.functionTypes.MainKt: kotlin.jvm.functions.Function0 giveFun2()>();

        $stack8 = interfaceinvoke $stack7.<kotlin.jvm.functions.Function0: java.lang.Object invoke()>();

        res = (java.lang.String) $stack8;

        $stack9 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack9.<java.io.PrintStream: void println(java.lang.Object)>(res);

        $stack10 = <de.fraunhofer.iem.uniqueToKotlin.highOrderFunctions.functionTypes.MainKt$main$fun3$1: de.fraunhofer.iem.uniqueToKotlin.highOrderFunctions.functionTypes.MainKt$main$fun3$1 INSTANCE>;

        fun3 = (kotlin.jvm.functions.Function2) $stack10;

        staticinvoke <de.fraunhofer.iem.uniqueToKotlin.highOrderFunctions.functionTypes.MainKt: void runFun3(kotlin.jvm.functions.Function2)>(fun3);

        $stack11 = <de.fraunhofer.iem.uniqueToKotlin.highOrderFunctions.functionTypes.MainKt$main$1: de.fraunhofer.iem.uniqueToKotlin.highOrderFunctions.functionTypes.MainKt$main$1 INSTANCE>;

        $stack12 = (kotlin.jvm.functions.Function3) $stack11;

        staticinvoke <de.fraunhofer.iem.uniqueToKotlin.highOrderFunctions.functionTypes.MainKt: void runFun4(kotlin.jvm.functions.Function3)>($stack12);

        staticinvoke <de.fraunhofer.iem.uniqueToKotlin.highOrderFunctions.functionTypes.MainKt: void runFun5(kotlin.jvm.functions.Function2)>(fun3);

        return;
    }

    public static final kotlin.jvm.functions.Function2 giveFun1()
    {
        kotlin.jvm.functions.Function2 $stack1;
        de.fraunhofer.iem.uniqueToKotlin.highOrderFunctions.functionTypes.MainKt$giveFun1$1 $stack0;

        $stack0 = <de.fraunhofer.iem.uniqueToKotlin.highOrderFunctions.functionTypes.MainKt$giveFun1$1: de.fraunhofer.iem.uniqueToKotlin.highOrderFunctions.functionTypes.MainKt$giveFun1$1 INSTANCE>;

        $stack1 = (kotlin.jvm.functions.Function2) $stack0;

        return $stack1;
    }

    public static final kotlin.jvm.functions.Function0 giveFun2()
    {
        de.fraunhofer.iem.uniqueToKotlin.highOrderFunctions.functionTypes.MainKt$giveFun2$fun2$1 $stack1;
        kotlin.jvm.functions.Function0 fun2;

        $stack1 = <de.fraunhofer.iem.uniqueToKotlin.highOrderFunctions.functionTypes.MainKt$giveFun2$fun2$1: de.fraunhofer.iem.uniqueToKotlin.highOrderFunctions.functionTypes.MainKt$giveFun2$fun2$1 INSTANCE>;

        fun2 = (kotlin.jvm.functions.Function0) $stack1;

        return fun2;
    }

    public static final void runFun3(kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 fun3;
        java.lang.Integer $stack1, $stack3;

        fun3 := @parameter0: kotlin.jvm.functions.Function2;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(fun3, "fun3");

        $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        interfaceinvoke fun3.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($stack1, "Fun3");

        $stack3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        interfaceinvoke fun3.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($stack3, "Fun3");

        return;
    }

    public static final void runFun4(kotlin.jvm.functions.Function3)
    {
        java.io.PrintStream $stack6, $stack10;
        kotlin.jvm.functions.Function3 fun4;
        java.lang.Integer $stack3, $stack4, $stack7, $stack8;
        java.lang.Object $stack5, $stack9;

        fun4 := @parameter0: kotlin.jvm.functions.Function3;

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(fun4, "fun4");

        $stack3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $stack4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        $stack5 = interfaceinvoke fun4.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($stack3, $stack4, "Fun3");

        $stack6 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack6.<java.io.PrintStream: void println(java.lang.Object)>($stack5);

        $stack7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $stack8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        $stack9 = interfaceinvoke fun4.<kotlin.jvm.functions.Function3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)>($stack7, $stack8, "Fun3");

        $stack10 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack10.<java.io.PrintStream: void println(java.lang.Object)>($stack9);

        return;
    }

    public static final void runFun5(kotlin.jvm.functions.Function2)
    {
        kotlin.jvm.functions.Function2 fun3;
        java.lang.Integer $stack2;

        fun3 := @parameter0: kotlin.jvm.functions.Function2;

        if fun3 != null goto label1;

        goto label2;

     label1:
        $stack2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        interfaceinvoke fun3.<kotlin.jvm.functions.Function2: java.lang.Object invoke(java.lang.Object,java.lang.Object)>($stack2, "Fun3");

     label2:
        return;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] args;

        args := @parameter0: java.lang.String[];

        staticinvoke <de.fraunhofer.iem.uniqueToKotlin.highOrderFunctions.functionTypes.MainKt: void main()>();

        return;
    }
}
