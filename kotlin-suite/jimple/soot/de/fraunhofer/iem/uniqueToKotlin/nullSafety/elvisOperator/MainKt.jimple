public final class de.fraunhofer.iem.uniqueToKotlin.nullSafety.elvisOperator.MainKt extends java.lang.Object
{

    public static final void main()
    {
        java.lang.String $stack3, $stack5, $stack7, $stack9, $stack11, $stack13, $stack17, $stack18;
        java.io.PrintStream $stack4, $stack6, $stack8, $stack10, $stack12, $stack14, $stack19;
        java.lang.IllegalArgumentException $stack15;

        $stack3 = staticinvoke <de.fraunhofer.iem.uniqueToKotlin.nullSafety.elvisOperator.MainKt: java.lang.String returnNonNullValue(java.lang.String)>(null);

        $stack4 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack4.<java.io.PrintStream: void println(java.lang.Object)>($stack3);

        $stack5 = staticinvoke <de.fraunhofer.iem.uniqueToKotlin.nullSafety.elvisOperator.MainKt: java.lang.String returnNonNullValue(java.lang.String)>("Ranjith");

        $stack6 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack6.<java.io.PrintStream: void println(java.lang.Object)>($stack5);

        $stack7 = staticinvoke <de.fraunhofer.iem.uniqueToKotlin.nullSafety.elvisOperator.MainKt: java.lang.String returnProcessedStringOrNull(java.lang.String)>(null);

        $stack8 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack8.<java.io.PrintStream: void println(java.lang.Object)>($stack7);

        $stack9 = staticinvoke <de.fraunhofer.iem.uniqueToKotlin.nullSafety.elvisOperator.MainKt: java.lang.String returnProcessedStringOrNull(java.lang.String)>("Ranjith");

        $stack10 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack10.<java.io.PrintStream: void println(java.lang.Object)>($stack9);

     label1:
        $stack11 = staticinvoke <de.fraunhofer.iem.uniqueToKotlin.nullSafety.elvisOperator.MainKt: java.lang.String returnProcessedStringOrThrowException(java.lang.String)>(null);

        $stack12 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack12.<java.io.PrintStream: void println(java.lang.Object)>($stack11);

        $stack13 = staticinvoke <de.fraunhofer.iem.uniqueToKotlin.nullSafety.elvisOperator.MainKt: java.lang.String returnProcessedStringOrThrowException(java.lang.String)>("Ranjith");

        $stack14 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack14.<java.io.PrintStream: void println(java.lang.Object)>($stack13);

     label2:
        goto label4;

     label3:
        $stack15 := @caughtexception;

        $stack17 = virtualinvoke $stack15.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        $stack18 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>("Got IllegalArgumentException = ", $stack17);

        $stack19 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack19.<java.io.PrintStream: void println(java.lang.Object)>($stack18);

     label4:
        staticinvoke <de.fraunhofer.iem.uniqueToKotlin.nullSafety.elvisOperator.MainKt: void processAllInOneMethod()>();

        return;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    public static final java.lang.String returnNonNullValue(java.lang.String)
    {
        int $stack10;
        java.lang.StringBuilder $stack5, $stack6, $stack7, $stack8;
        java.lang.String name, $stack9;

        name := @parameter0: java.lang.String;

        if name != null goto label1;

        $stack10 = 0;

        goto label2;

     label1:
        $stack10 = virtualinvoke name.<java.lang.String: int length()>();

     label2:
        $stack5 = new java.lang.StringBuilder;

        specialinvoke $stack5.<java.lang.StringBuilder: void <init>()>();

        $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(name);

        $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = ");

        $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack10);

        $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack9;
    }

    public static final java.lang.String returnProcessedStringOrNull(java.lang.String)
    {
        java.lang.Integer $stack5;
        int $stack4, $stack6;
        java.lang.StringBuilder $stack7, $stack8, $stack9, $stack10;
        java.lang.String name, $stack11;

        name := @parameter0: java.lang.String;

        if name != null goto label1;

        $stack5 = null;

        goto label2;

     label1:
        $stack4 = virtualinvoke name.<java.lang.String: int length()>();

        $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack4);

     label2:
        if $stack5 != null goto label3;

        return null;

     label3:
        $stack6 = virtualinvoke $stack5.<java.lang.Integer: int intValue()>();

        $stack7 = new java.lang.StringBuilder;

        specialinvoke $stack7.<java.lang.StringBuilder: void <init>()>();

        $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(name);

        $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = ");

        $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack6);

        $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack11;
    }

    public static final java.lang.String returnProcessedStringOrThrowException(java.lang.String)
    {
        java.lang.IllegalArgumentException $stack12;
        java.lang.Integer $stack5;
        int $stack4, $stack6;
        java.lang.StringBuilder $stack7, $stack8, $stack9, $stack10;
        java.lang.String name, $stack11;

        name := @parameter0: java.lang.String;

        if name != null goto label1;

        $stack5 = null;

        goto label2;

     label1:
        $stack4 = virtualinvoke name.<java.lang.String: int length()>();

        $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack4);

     label2:
        if $stack5 != null goto label3;

        $stack12 = new java.lang.IllegalArgumentException;

        specialinvoke $stack12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Illegal argument: Given argument is null");

        throw $stack12;

     label3:
        $stack6 = virtualinvoke $stack5.<java.lang.Integer: int intValue()>();

        $stack7 = new java.lang.StringBuilder;

        specialinvoke $stack7.<java.lang.StringBuilder: void <init>()>();

        $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(name);

        $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = ");

        $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack6);

        $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack11;
    }

    public static final void processAllInOneMethod()
    {
        java.lang.Integer $stack14;
        int $stack13, $stack15, $stack24;
        java.lang.String $stack4, $stack10, $stack12, $stack20;
        java.io.PrintStream $stack11, $stack21;
        java.lang.IllegalArgumentException $stack22;
        java.lang.StringBuilder $stack6, $stack7, $stack8, $stack9, $stack16, $stack17, $stack18, $stack19;

        $stack4 = staticinvoke <de.fraunhofer.iem.uniqueToKotlin.nullSafety.safeCalls.MainKt: java.lang.String getString()>();

        if $stack4 != null goto label1;

        $stack24 = 0;

        goto label2;

     label1:
        $stack24 = virtualinvoke $stack4.<java.lang.String: int length()>();

     label2:
        $stack6 = new java.lang.StringBuilder;

        specialinvoke $stack6.<java.lang.StringBuilder: void <init>()>();

        $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack4);

        $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = ");

        $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack24);

        $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack11 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack11.<java.io.PrintStream: void println(java.lang.Object)>($stack10);

        $stack12 = staticinvoke <de.fraunhofer.iem.uniqueToKotlin.nullSafety.safeCalls.MainKt: java.lang.String getString()>();

        if $stack12 != null goto label3;

        $stack14 = null;

        goto label4;

     label3:
        $stack13 = virtualinvoke $stack12.<java.lang.String: int length()>();

        $stack14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack13);

     label4:
        if $stack14 != null goto label5;

        $stack22 = new java.lang.IllegalArgumentException;

        specialinvoke $stack22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Illegal argument: Given argument is null");

        throw $stack22;

     label5:
        $stack15 = virtualinvoke $stack14.<java.lang.Integer: int intValue()>();

        $stack16 = new java.lang.StringBuilder;

        specialinvoke $stack16.<java.lang.StringBuilder: void <init>()>();

        $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack12);

        $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = ");

        $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack15);

        $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack21 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack21.<java.io.PrintStream: void println(java.lang.Object)>($stack20);

        return;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] args;

        args := @parameter0: java.lang.String[];

        staticinvoke <de.fraunhofer.iem.uniqueToKotlin.nullSafety.elvisOperator.MainKt: void main()>();

        return;
    }
}
