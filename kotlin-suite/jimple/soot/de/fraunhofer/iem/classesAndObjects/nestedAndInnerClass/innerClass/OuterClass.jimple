public final class de.fraunhofer.iem.classesAndObjects.nestedAndInnerClass.innerClass.OuterClass extends java.lang.Object
{
    private final int outerFlag;

    public void <init>()
    {
        de.fraunhofer.iem.classesAndObjects.nestedAndInnerClass.innerClass.OuterClass this;

        this := @this: de.fraunhofer.iem.classesAndObjects.nestedAndInnerClass.innerClass.OuterClass;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<de.fraunhofer.iem.classesAndObjects.nestedAndInnerClass.innerClass.OuterClass: int outerFlag> = 110;

        return;
    }

    public final void printAll()
    {
        de.fraunhofer.iem.classesAndObjects.nestedAndInnerClass.innerClass.OuterClass this;
        int l1;
        java.io.PrintStream $stack3;

        this := @this: de.fraunhofer.iem.classesAndObjects.nestedAndInnerClass.innerClass.OuterClass;

        l1 = this.<de.fraunhofer.iem.classesAndObjects.nestedAndInnerClass.innerClass.OuterClass: int outerFlag>;

        $stack3 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack3.<java.io.PrintStream: void println(int)>(l1);

        return;
    }

    public static final int access$getOuterFlag$p(de.fraunhofer.iem.classesAndObjects.nestedAndInnerClass.innerClass.OuterClass)
    {
        de.fraunhofer.iem.classesAndObjects.nestedAndInnerClass.innerClass.OuterClass $this;
        int $stack1;

        $this := @parameter0: de.fraunhofer.iem.classesAndObjects.nestedAndInnerClass.innerClass.OuterClass;

        $stack1 = $this.<de.fraunhofer.iem.classesAndObjects.nestedAndInnerClass.innerClass.OuterClass: int outerFlag>;

        return $stack1;
    }
}
