public final class de.fraunhofer.iem.generics.upperBounds.inGenericFunctions.MainKt extends java.lang.Object
{

    public static final de.fraunhofer.iem.uniqueToKotlin.declarationSiteVarianceAndTypeProjetion.typeProjection.DifferentTypedPair createDifferentTypedPair(java.lang.Number, java.lang.CharSequence)
    {
        de.fraunhofer.iem.uniqueToKotlin.declarationSiteVarianceAndTypeProjetion.typeProjection.DifferentTypedPair $stack2;
        java.lang.CharSequence second;
        java.lang.String varReplacer1206, varReplacer1207;
        java.lang.Number first;

        nop;

        first := @parameter0: java.lang.Number;

        second := @parameter1: java.lang.CharSequence;

        varReplacer1207 = "first";

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(first, varReplacer1207);

        varReplacer1206 = "second";

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(second, varReplacer1206);

        $stack2 = new de.fraunhofer.iem.uniqueToKotlin.declarationSiteVarianceAndTypeProjetion.typeProjection.DifferentTypedPair;

        specialinvoke $stack2.<de.fraunhofer.iem.uniqueToKotlin.declarationSiteVarianceAndTypeProjetion.typeProjection.DifferentTypedPair: void <init>(java.lang.Object,java.lang.Object)>(first, second);

        return $stack2;
    }

    public static final void main()
    {
        java.io.PrintStream $stack6;
        de.fraunhofer.iem.uniqueToKotlin.declarationSiteVarianceAndTypeProjetion.typeProjection.DifferentTypedPair $stack5;
        java.lang.CharSequence $stack3;
        int varReplacer1208;
        java.lang.Number $stack4;
        java.lang.Integer $stack2;

        nop;

        varReplacer1208 = 2646;

        $stack2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(varReplacer1208);

        $stack4 = (java.lang.Number) $stack2;

        $stack3 = (java.lang.CharSequence) "Ranjith";

        $stack5 = staticinvoke <de.fraunhofer.iem.generics.upperBounds.inGenericFunctions.MainKt: de.fraunhofer.iem.uniqueToKotlin.declarationSiteVarianceAndTypeProjetion.typeProjection.DifferentTypedPair createDifferentTypedPair(java.lang.Number,java.lang.CharSequence)>($stack4, $stack3);

        $stack6 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack6.<java.io.PrintStream: void println(java.lang.Object)>($stack5);

        return;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] args;

        nop;

        args := @parameter0: java.lang.String[];

        staticinvoke <de.fraunhofer.iem.generics.upperBounds.inGenericFunctions.MainKt: void main()>();

        return;
    }
}
