{
    "className": "de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MainKt",
    "superClass": "java.lang.Object",
    "implementedInterface": [],
    "methodCount": 2,
    "methodsSignature": [
        "<de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MainKt: void main()>",
        "<de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MainKt: void main(java.lang.String[])>"
    ],
    "methodsInformation": {
        "void main()": {
            "localVariables": {
                "varReplacer2797": "java.lang.String",
                "varReplacer2798": "int",
                "varReplacer2799": "int",
                "varReplacer2800": "java.lang.String",
                "varReplacer2801": "java.lang.String",
                "varReplacer2802": "int",
                "varReplacer2803": "int",
                "varReplacer2804": "int",
                "varReplacer2805": "int",
                "varReplacer2806": "java.lang.String",
                "varReplacer2807": "int",
                "varReplacer2808": "int",
                "varReplacer2809": "int"
            },
            "stackVariables": {
                "$stack4": "java.io.PrintStream",
                "$stack6": "de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt",
                "$stack7": "java.io.PrintStream",
                "$stack9": "de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt",
                "$stack10": "java.io.PrintStream",
                "$stack12": "de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt",
                "$stack13": "java.io.PrintStream",
                "$stack15": "de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt",
                "$stack16": "java.io.PrintStream",
                "$stack18": "de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt",
                "$stack19": "java.io.PrintStream",
                "$stack21": "de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt",
                "$stack22": "java.io.PrintStream",
                "$stack24": "de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt",
                "$stack25": "java.io.PrintStream",
                "$stack26": "java.io.PrintStream",
                "$stack28": "java.io.PrintStream",
                "$stack29": "de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt",
                "$stack30": "java.io.PrintStream",
                "$stack31": "java.io.PrintStream",
                "$stack32": "de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt",
                "$stack33": "java.io.PrintStream",
                "$stack34": "java.io.PrintStream",
                "$stack35": "de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt",
                "$stack36": "java.io.PrintStream",
                "$stack37": "java.io.PrintStream",
                "$stack38": "de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt",
                "$stack39": "java.io.PrintStream",
                "$stack40": "java.io.PrintStream",
                "$stack41": "java.io.PrintStream",
                "$stack44": "de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt",
                "$stack45": "java.io.PrintStream",
                "$stack46": "de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt",
                "$stack47": "java.io.PrintStream",
                "$stack48": "de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt",
                "$stack49": "java.io.PrintStream",
                "$stack50": "de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt",
                "$stack51": "java.io.PrintStream",
                "$stack52": "de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt",
                "$stack53": "java.io.PrintStream",
                "$stack54": "java.io.PrintStream",
                "$stack55": "boolean",
                "$stack56": "java.io.PrintStream",
                "$stack57": "boolean",
                "$stack58": "java.io.PrintStream",
                "$stack60": "boolean",
                "$stack61": "java.io.PrintStream",
                "$stack63": "boolean",
                "$stack64": "java.io.PrintStream",
                "$stack68": "boolean",
                "$stack65": "boolean",
                "$u0": "de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt",
                "$u1": "de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt",
                "$u2": "de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt",
                "$u3": "de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt",
                "$u4": "de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt",
                "$u5": "de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt",
                "$u6": "de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt",
                "$u7": "de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt",
                "$u8": "de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt",
                "$u9": "de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt",
                "$u10": "de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt",
                "$u11": "de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt",
                "$i0": "int",
                "$i1": "int",
                "$i2": "int"
            },
            "invokeExpressions": [
                "<java.io.PrintStream: void println(java.lang.Object)>",
                "<de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt: void <init>(int)>",
                "<de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt: de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt unaryPlus()>",
                "<java.io.PrintStream: void println(java.lang.Object)>",
                "<de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt: void <init>(int)>",
                "<de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt: de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt unaryPlus()>",
                "<java.io.PrintStream: void println(java.lang.Object)>",
                "<de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt: void <init>(int)>",
                "<de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt: de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt unaryMinus()>",
                "<java.io.PrintStream: void println(java.lang.Object)>",
                "<de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt: void <init>(int)>",
                "<de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt: de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt unaryMinus()>",
                "<java.io.PrintStream: void println(java.lang.Object)>",
                "<de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt: void <init>(int)>",
                "<de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt: de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt not()>",
                "<java.io.PrintStream: void println(java.lang.Object)>",
                "<de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt: void <init>(int)>",
                "<de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt: de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt not()>",
                "<java.io.PrintStream: void println(java.lang.Object)>",
                "<de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt: void <init>(int)>",
                "<de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt: de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt not()>",
                "<java.io.PrintStream: void println(java.lang.Object)>",
                "<java.io.PrintStream: void println(java.lang.Object)>",
                "<de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt: void <init>(int)>",
                "<java.io.PrintStream: void println(java.lang.Object)>",
                "<de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt: de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt inc()>",
                "<java.io.PrintStream: void println(java.lang.Object)>",
                "<java.io.PrintStream: void println(java.lang.Object)>",
                "<de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt: de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt inc()>",
                "<java.io.PrintStream: void println(java.lang.Object)>",
                "<java.io.PrintStream: void println(java.lang.Object)>",
                "<de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt: de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt dec()>",
                "<java.io.PrintStream: void println(java.lang.Object)>",
                "<java.io.PrintStream: void println(java.lang.Object)>",
                "<de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt: de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt dec()>",
                "<java.io.PrintStream: void println(java.lang.Object)>",
                "<java.io.PrintStream: void println(java.lang.Object)>",
                "<java.io.PrintStream: void println(java.lang.Object)>",
                "<de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt: void <init>(int)>",
                "<de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt: void <init>(int)>",
                "<de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt: de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt plus(de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt)>",
                "<java.io.PrintStream: void println(java.lang.Object)>",
                "<de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt: de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt minus(de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt)>",
                "<java.io.PrintStream: void println(java.lang.Object)>",
                "<de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt: de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt div(de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt)>",
                "<java.io.PrintStream: void println(java.lang.Object)>",
                "<de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt: de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt times(de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt)>",
                "<java.io.PrintStream: void println(java.lang.Object)>",
                "<de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt: de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt rem(de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt)>",
                "<java.io.PrintStream: void println(java.lang.Object)>",
                "<java.io.PrintStream: void println(java.lang.Object)>",
                "<de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt: boolean contains(de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt)>",
                "<java.io.PrintStream: void println(boolean)>",
                "<de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt: boolean contains(de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt)>",
                "<java.io.PrintStream: void println(boolean)>",
                "<de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt: void <init>(int)>",
                "<de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt: boolean contains(de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt)>",
                "<java.io.PrintStream: void println(boolean)>",
                "<de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt: void <init>(int)>",
                "<de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt: boolean contains(de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MyInt)>",
                "<java.io.PrintStream: void println(boolean)>"
            ]
        },
        "void main(java.lang.String[])": {
            "localVariables": {"args": "java.lang.String[]"},
            "stackVariables": {},
            "invokeExpressions": ["<de.fraunhofer.iem.uniqueToKotlin.operatorOverloading.simpleExample.MainKt: void main()>"]
        }
    }
}
