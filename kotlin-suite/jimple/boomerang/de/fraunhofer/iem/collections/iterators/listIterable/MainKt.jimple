public final class de.fraunhofer.iem.collections.iterators.listIterable.MainKt extends java.lang.Object
{

    public static final void main()
    {
        java.util.ArrayList $stack3;
        java.lang.String varReplacer1230, varReplacer1231, varReplacer1232, varReplacer1233, varReplacer1234, varReplacer1235, varReplacer1236, varReplacer1237, varReplacer1238, varReplacer1239, varReplacer1240, varReplacer1241;
        java.io.PrintStream $stack6, $stack7, $stack8, $stack9, $stack10, $stack11, $stack12, $stack13, $stack14, $stack15;
        java.util.List lst;

        nop;

        $stack3 = new java.util.ArrayList;

        specialinvoke $stack3.<java.util.ArrayList: void <init>()>();

        lst = (java.util.List) $stack3;

        varReplacer1238 = "Ranjith";

        interfaceinvoke lst.<java.util.List: boolean add(java.lang.Object)>(varReplacer1238);

        varReplacer1234 = "K";

        interfaceinvoke lst.<java.util.List: boolean add(java.lang.Object)>(varReplacer1234);

        $stack6 = <java.lang.System: java.io.PrintStream out>;

        varReplacer1240 = "***********************************************";

        virtualinvoke $stack6.<java.io.PrintStream: void println(java.lang.Object)>(varReplacer1240);

        staticinvoke <de.fraunhofer.iem.collections.iterators.listIterable.MainKt: void printForward(java.util.List)>(lst);

        $stack7 = <java.lang.System: java.io.PrintStream out>;

        varReplacer1241 = "***********************************************";

        virtualinvoke $stack7.<java.io.PrintStream: void println(java.lang.Object)>(varReplacer1241);

        staticinvoke <de.fraunhofer.iem.collections.iterators.listIterable.MainKt: void appendSuffix(java.util.List)>(lst);

        $stack8 = <java.lang.System: java.io.PrintStream out>;

        varReplacer1233 = "***********************************************";

        virtualinvoke $stack8.<java.io.PrintStream: void println(java.lang.Object)>(varReplacer1233);

        staticinvoke <de.fraunhofer.iem.collections.iterators.listIterable.MainKt: void printForward(java.util.List)>(lst);

        $stack9 = <java.lang.System: java.io.PrintStream out>;

        varReplacer1239 = "***********************************************";

        virtualinvoke $stack9.<java.io.PrintStream: void println(java.lang.Object)>(varReplacer1239);

        $stack10 = <java.lang.System: java.io.PrintStream out>;

        varReplacer1235 = "***********************************************";

        virtualinvoke $stack10.<java.io.PrintStream: void println(java.lang.Object)>(varReplacer1235);

        staticinvoke <de.fraunhofer.iem.collections.iterators.listIterable.MainKt: void printBackward(java.util.List)>(lst);

        $stack11 = <java.lang.System: java.io.PrintStream out>;

        varReplacer1236 = "***********************************************";

        virtualinvoke $stack11.<java.io.PrintStream: void println(java.lang.Object)>(varReplacer1236);

        staticinvoke <de.fraunhofer.iem.collections.iterators.listIterable.MainKt: void addMarker(java.util.List)>(lst);

        $stack12 = <java.lang.System: java.io.PrintStream out>;

        varReplacer1230 = "***********************************************";

        virtualinvoke $stack12.<java.io.PrintStream: void println(java.lang.Object)>(varReplacer1230);

        staticinvoke <de.fraunhofer.iem.collections.iterators.listIterable.MainKt: void printForward(java.util.List)>(lst);

        $stack13 = <java.lang.System: java.io.PrintStream out>;

        varReplacer1231 = "***********************************************";

        virtualinvoke $stack13.<java.io.PrintStream: void println(java.lang.Object)>(varReplacer1231);

        staticinvoke <de.fraunhofer.iem.collections.iterators.listIterable.MainKt: void removeMarker(java.util.List)>(lst);

        $stack14 = <java.lang.System: java.io.PrintStream out>;

        varReplacer1237 = "***********************************************";

        virtualinvoke $stack14.<java.io.PrintStream: void println(java.lang.Object)>(varReplacer1237);

        staticinvoke <de.fraunhofer.iem.collections.iterators.listIterable.MainKt: void printForward(java.util.List)>(lst);

        $stack15 = <java.lang.System: java.io.PrintStream out>;

        varReplacer1232 = "***********************************************";

        virtualinvoke $stack15.<java.io.PrintStream: void println(java.lang.Object)>(varReplacer1232);

        return;
    }

    private static final void appendSuffix(java.util.List)
    {
        java.util.List lst;
        java.util.ListIterator $stack3;
        java.lang.Object $stack5;
        java.lang.String elem, $stack6, varReplacer1242;
        boolean $stack4;

        nop;

        lst := @parameter0: java.util.List;

        $stack3 = interfaceinvoke lst.<java.util.List: java.util.ListIterator listIterator()>();

     label1:
        $stack4 = interfaceinvoke $stack3.<java.util.ListIterator: boolean hasNext()>();

        if $stack4 == 0 goto label2;

        nop;

        $stack5 = interfaceinvoke $stack3.<java.util.ListIterator: java.lang.Object next()>();

        elem = (java.lang.String) $stack5;

        varReplacer1242 = "-MARKER";

        $stack6 = staticinvoke <kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>(elem, varReplacer1242);

        interfaceinvoke $stack3.<java.util.ListIterator: void set(java.lang.Object)>($stack6);

        goto label1;

     label2:
        nop;

        return;
    }

    private static final void printForward(java.util.List)
    {
        java.io.PrintStream $stack15;
        java.util.ListIterator $stack5;
        java.util.List lst;
        int $stack12;
        java.lang.Object $stack7;
        java.lang.StringBuilder $stack8, $stack9, $stack10, $stack11, $stack13;
        java.lang.String elem, $stack14, varReplacer1243, varReplacer1244;
        boolean $stack6;

        nop;

        lst := @parameter0: java.util.List;

        $stack5 = interfaceinvoke lst.<java.util.List: java.util.ListIterator listIterator()>();

     label1:
        $stack6 = interfaceinvoke $stack5.<java.util.ListIterator: boolean hasNext()>();

        if $stack6 == 0 goto label2;

        nop;

        $stack7 = interfaceinvoke $stack5.<java.util.ListIterator: java.lang.Object next()>();

        elem = (java.lang.String) $stack7;

        $stack8 = new java.lang.StringBuilder;

        specialinvoke $stack8.<java.lang.StringBuilder: void <init>()>();

        varReplacer1244 = "Element = \"";

        $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1244);

        $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(elem);

        varReplacer1243 = "\"\t:\tNextIndex = ";

        $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1243);

        $stack12 = interfaceinvoke $stack5.<java.util.ListIterator: int nextIndex()>();

        $stack13 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack12);

        $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack15 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack15.<java.io.PrintStream: void println(java.lang.Object)>($stack14);

        goto label1;

     label2:
        nop;

        return;
    }

    private static final void printBackward(java.util.List)
    {
        java.util.ListIterator $stack5;
        int $stack13;
        java.lang.String elem, $stack15, varReplacer1245, varReplacer1246;
        boolean $stack6, $stack7;
        java.io.PrintStream $stack16;
        java.util.List lst;
        java.lang.Object $stack8;
        java.lang.StringBuilder $stack9, $stack10, $stack11, $stack12, $stack14;

        nop;

        lst := @parameter0: java.util.List;

        $stack5 = interfaceinvoke lst.<java.util.List: java.util.ListIterator listIterator()>();

     label1:
        $stack6 = interfaceinvoke $stack5.<java.util.ListIterator: boolean hasNext()>();

        if $stack6 == 0 goto label2;

        nop;

        interfaceinvoke $stack5.<java.util.ListIterator: java.lang.Object next()>();

        goto label1;

     label2:
        nop;

        $stack7 = interfaceinvoke $stack5.<java.util.ListIterator: boolean hasPrevious()>();

        if $stack7 == 0 goto label3;

        nop;

        $stack8 = interfaceinvoke $stack5.<java.util.ListIterator: java.lang.Object previous()>();

        elem = (java.lang.String) $stack8;

        $stack9 = new java.lang.StringBuilder;

        specialinvoke $stack9.<java.lang.StringBuilder: void <init>()>();

        varReplacer1245 = "Element = \"";

        $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1245);

        $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(elem);

        varReplacer1246 = "\"\t:\tPreviousIndex = ";

        $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1246);

        $stack13 = interfaceinvoke $stack5.<java.util.ListIterator: int previousIndex()>();

        $stack14 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack13);

        $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack16 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack16.<java.io.PrintStream: void println(java.lang.Object)>($stack15);

        goto label2;

     label3:
        nop;

        return;
    }

    private static final void addMarker(java.util.List)
    {
        java.util.ListIterator $stack3;
        java.util.List lst;
        java.lang.Object $stack5;
        java.lang.String elem, varReplacer1247, varReplacer1248;
        boolean $stack6, $stack4;

        nop;

        lst := @parameter0: java.util.List;

        $stack3 = interfaceinvoke lst.<java.util.List: java.util.ListIterator listIterator()>();

     label1:
        nop;

        $stack4 = interfaceinvoke $stack3.<java.util.ListIterator: boolean hasNext()>();

        if $stack4 == 0 goto label2;

        nop;

        $stack5 = interfaceinvoke $stack3.<java.util.ListIterator: java.lang.Object next()>();

        elem = (java.lang.String) $stack5;

        varReplacer1248 = "MARKER";

        $stack6 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(elem, varReplacer1248);

        if $stack6 != 0 goto label1;

        nop;

        varReplacer1247 = "MARKER";

        interfaceinvoke $stack3.<java.util.ListIterator: void add(java.lang.Object)>(varReplacer1247);

        goto label1;

     label2:
        nop;

        return;
    }

    private static final void removeMarker(java.util.List)
    {
        java.util.List lst;
        java.util.ListIterator $stack3;
        java.lang.Object $stack5;
        java.lang.String elem, varReplacer1249;
        boolean $stack6, $stack4;

        nop;

        lst := @parameter0: java.util.List;

        $stack3 = interfaceinvoke lst.<java.util.List: java.util.ListIterator listIterator()>();

     label1:
        nop;

        $stack4 = interfaceinvoke $stack3.<java.util.ListIterator: boolean hasNext()>();

        if $stack4 == 0 goto label2;

        nop;

        $stack5 = interfaceinvoke $stack3.<java.util.ListIterator: java.lang.Object next()>();

        elem = (java.lang.String) $stack5;

        varReplacer1249 = "MARKER";

        $stack6 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>(elem, varReplacer1249);

        if $stack6 == 0 goto label1;

        nop;

        interfaceinvoke $stack3.<java.util.ListIterator: void remove()>();

        goto label1;

     label2:
        nop;

        return;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] args;

        nop;

        args := @parameter0: java.lang.String[];

        staticinvoke <de.fraunhofer.iem.collections.iterators.listIterable.MainKt: void main()>();

        return;
    }
}
