final class de.fraunhofer.iem.collections.iterators.iterable.inCustomClass.FiveInts$FiveIntsIterator extends java.lang.Object implements java.util.Iterator, kotlin.jvm.internal.markers.KMappedMarker
{
    private int currentCursor;
    private int nextCursor;
    final de.fraunhofer.iem.collections.iterators.iterable.inCustomClass.FiveInts this$0;

    public void <init>(de.fraunhofer.iem.collections.iterators.iterable.inCustomClass.FiveInts)
    {
        int $i0;
        de.fraunhofer.iem.collections.iterators.iterable.inCustomClass.FiveInts this$0;
        java.lang.String varReplacer1214;
        de.fraunhofer.iem.collections.iterators.iterable.inCustomClass.FiveInts$FiveIntsIterator this;

        nop;

        this := @this: de.fraunhofer.iem.collections.iterators.iterable.inCustomClass.FiveInts$FiveIntsIterator;

        this$0 := @parameter0: de.fraunhofer.iem.collections.iterators.iterable.inCustomClass.FiveInts;

        varReplacer1214 = "this$0";

        staticinvoke <kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)>(this$0, varReplacer1214);

        this.<de.fraunhofer.iem.collections.iterators.iterable.inCustomClass.FiveInts$FiveIntsIterator: de.fraunhofer.iem.collections.iterators.iterable.inCustomClass.FiveInts this$0> = this$0;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $i0 = (int) -1;

        this.<de.fraunhofer.iem.collections.iterators.iterable.inCustomClass.FiveInts$FiveIntsIterator: int currentCursor> = $i0;

        return;
    }

    public final int getCurrentCursor()
    {
        int $stack1;
        de.fraunhofer.iem.collections.iterators.iterable.inCustomClass.FiveInts$FiveIntsIterator this;

        nop;

        this := @this: de.fraunhofer.iem.collections.iterators.iterable.inCustomClass.FiveInts$FiveIntsIterator;

        $stack1 = this.<de.fraunhofer.iem.collections.iterators.iterable.inCustomClass.FiveInts$FiveIntsIterator: int currentCursor>;

        return $stack1;
    }

    public final void setCurrentCursor(int)
    {
        int <set-?>;
        de.fraunhofer.iem.collections.iterators.iterable.inCustomClass.FiveInts$FiveIntsIterator this;

        nop;

        this := @this: de.fraunhofer.iem.collections.iterators.iterable.inCustomClass.FiveInts$FiveIntsIterator;

        <set-?> := @parameter0: int;

        this.<de.fraunhofer.iem.collections.iterators.iterable.inCustomClass.FiveInts$FiveIntsIterator: int currentCursor> = <set-?>;

        return;
    }

    public final int getNextCursor()
    {
        int $stack1;
        de.fraunhofer.iem.collections.iterators.iterable.inCustomClass.FiveInts$FiveIntsIterator this;

        nop;

        this := @this: de.fraunhofer.iem.collections.iterators.iterable.inCustomClass.FiveInts$FiveIntsIterator;

        $stack1 = this.<de.fraunhofer.iem.collections.iterators.iterable.inCustomClass.FiveInts$FiveIntsIterator: int nextCursor>;

        return $stack1;
    }

    public final void setNextCursor(int)
    {
        int <set-?>;
        de.fraunhofer.iem.collections.iterators.iterable.inCustomClass.FiveInts$FiveIntsIterator this;

        nop;

        this := @this: de.fraunhofer.iem.collections.iterators.iterable.inCustomClass.FiveInts$FiveIntsIterator;

        <set-?> := @parameter0: int;

        this.<de.fraunhofer.iem.collections.iterators.iterable.inCustomClass.FiveInts$FiveIntsIterator: int nextCursor> = <set-?>;

        return;
    }

    public boolean hasNext()
    {
        int $stack1;
        de.fraunhofer.iem.collections.iterators.iterable.inCustomClass.FiveInts$FiveIntsIterator this;
        boolean $stack2;

        nop;

        this := @this: de.fraunhofer.iem.collections.iterators.iterable.inCustomClass.FiveInts$FiveIntsIterator;

        $stack1 = this.<de.fraunhofer.iem.collections.iterators.iterable.inCustomClass.FiveInts$FiveIntsIterator: int currentCursor>;

        if $stack1 >= 4 goto label1;

        nop;

        $stack2 = 1;

        goto label2;

     label1:
        nop;

        $stack2 = 0;

     label2:
        return $stack2;
    }

    public java.lang.Integer next()
    {
        de.fraunhofer.iem.collections.iterators.iterable.inCustomClass.FiveInts $stack5;
        de.fraunhofer.iem.collections.iterators.iterable.inCustomClass.FiveInts$FiveIntsIterator this;
        java.lang.Integer $stack9;
        int[] $stack6;
        int $stack2, $stack3, $stack4, $stack7, $stack8;

        nop;

        this := @this: de.fraunhofer.iem.collections.iterators.iterable.inCustomClass.FiveInts$FiveIntsIterator;

        $stack2 = this.<de.fraunhofer.iem.collections.iterators.iterable.inCustomClass.FiveInts$FiveIntsIterator: int currentCursor>;

        $stack3 = $stack2 + 1;

        this.<de.fraunhofer.iem.collections.iterators.iterable.inCustomClass.FiveInts$FiveIntsIterator: int currentCursor> = $stack3;

        $stack4 = this.<de.fraunhofer.iem.collections.iterators.iterable.inCustomClass.FiveInts$FiveIntsIterator: int currentCursor>;

        this.<de.fraunhofer.iem.collections.iterators.iterable.inCustomClass.FiveInts$FiveIntsIterator: int nextCursor> = $stack4;

        $stack5 = this.<de.fraunhofer.iem.collections.iterators.iterable.inCustomClass.FiveInts$FiveIntsIterator: de.fraunhofer.iem.collections.iterators.iterable.inCustomClass.FiveInts this$0>;

        $stack6 = staticinvoke <de.fraunhofer.iem.collections.iterators.iterable.inCustomClass.FiveInts: int[] access$getData$p(de.fraunhofer.iem.collections.iterators.iterable.inCustomClass.FiveInts)>($stack5);

        $stack7 = this.<de.fraunhofer.iem.collections.iterators.iterable.inCustomClass.FiveInts$FiveIntsIterator: int nextCursor>;

        $stack8 = $stack6[$stack7];

        $stack9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack8);

        return $stack9;
    }

    public void remove()
    {
        java.lang.UnsupportedOperationException $stack1;
        java.lang.String varReplacer1215;
        de.fraunhofer.iem.collections.iterators.iterable.inCustomClass.FiveInts$FiveIntsIterator this;

        nop;

        this := @this: de.fraunhofer.iem.collections.iterators.iterable.inCustomClass.FiveInts$FiveIntsIterator;

        $stack1 = new java.lang.UnsupportedOperationException;

        varReplacer1215 = "Operation is not supported for read-only collection";

        specialinvoke $stack1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>(varReplacer1215);

        throw $stack1;
    }

    public volatile java.lang.Object next()
    {
        de.fraunhofer.iem.collections.iterators.iterable.inCustomClass.FiveInts$FiveIntsIterator this;
        java.lang.Integer $stack1;

        nop;

        this := @this: de.fraunhofer.iem.collections.iterators.iterable.inCustomClass.FiveInts$FiveIntsIterator;

        $stack1 = virtualinvoke this.<de.fraunhofer.iem.collections.iterators.iterable.inCustomClass.FiveInts$FiveIntsIterator: java.lang.Integer next()>();

        return $stack1;
    }
}
