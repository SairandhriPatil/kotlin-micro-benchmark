{
    "className": "de.fraunhofer.iem.functions.localFunctions.inTopLevel.MainKt",
    "superClass": "java.lang.Object",
    "implementedInterface": [],
    "methodCount": 7,
    "methodsSignature": [
        "<de.fraunhofer.iem.functions.localFunctions.inTopLevel.MainKt: int stepIncrementer(int,int,int)>",
        "<de.fraunhofer.iem.functions.localFunctions.inTopLevel.MainKt: int stepIncrementer1For10Count(int)>",
        "<de.fraunhofer.iem.functions.localFunctions.inTopLevel.MainKt: void main()>",
        "<de.fraunhofer.iem.functions.localFunctions.inTopLevel.MainKt: void main(java.lang.String[])>",
        "<de.fraunhofer.iem.functions.localFunctions.inTopLevel.MainKt: void stepIncrementer$add(int,kotlin.jvm.internal.Ref$IntRef,int,int)>",
        "<de.fraunhofer.iem.functions.localFunctions.inTopLevel.MainKt: void stepIncrementer$add-0(kotlin.jvm.internal.Ref$ObjectRef,int,int)>",
        "<de.fraunhofer.iem.functions.localFunctions.inTopLevel.MainKt: int stepIncrementer1For10Count$add-1(int,kotlin.jvm.internal.Ref$IntRef,int,int,java.lang.String)>"
    ],
    "methodsInformation": {
        "int stepIncrementer(int,int,int)": {
            "localVariables": {
                "number": "int",
                "iterCount": "int",
                "step": "int",
                "varReplacer1873": "java.lang.String",
                "varReplacer1874": "java.lang.String",
                "varReplacer1875": "int",
                "varReplacer1876": "java.lang.String",
                "varReplacer1877": "java.lang.String",
                "varReplacer1878": "int",
                "varReplacer1879": "int"
            },
            "stackVariables": {
                "$stack8": "kotlin.jvm.internal.Ref$IntRef",
                "$stack9": "kotlin.jvm.internal.Ref$ObjectRef",
                "$stack10": "java.lang.StringBuilder",
                "$stack11": "java.lang.StringBuilder",
                "$stack12": "java.lang.StringBuilder",
                "$stack13": "java.lang.StringBuilder",
                "$stack14": "java.lang.StringBuilder",
                "$stack15": "java.lang.StringBuilder",
                "$stack16": "java.lang.StringBuilder",
                "$stack17": "java.lang.String",
                "$stack18": "java.io.PrintStream",
                "$stack19": "java.io.PrintStream",
                "$stack20": "int",
                "l6": "java.lang.Object"
            },
            "invokeExpressions": [
                "<kotlin.jvm.internal.Ref$IntRef: void <init>()>",
                "<kotlin.jvm.internal.Ref$ObjectRef: void <init>()>",
                "<java.lang.StringBuilder: void <init>()>",
                "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
                "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
                "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
                "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
                "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
                "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
                "<java.lang.StringBuilder: java.lang.String toString()>",
                "<java.io.PrintStream: void println(java.lang.Object)>",
                "<de.fraunhofer.iem.functions.localFunctions.inTopLevel.MainKt: void stepIncrementer$add(int,kotlin.jvm.internal.Ref$IntRef,int,int)>",
                "<de.fraunhofer.iem.functions.localFunctions.inTopLevel.MainKt: void stepIncrementer$add-0(kotlin.jvm.internal.Ref$ObjectRef,int,int)>",
                "<java.io.PrintStream: void println(java.lang.Object)>"
            ]
        },
        "int stepIncrementer1For10Count(int)": {
            "localVariables": {
                "number": "int",
                "varReplacer1880": "int",
                "varReplacer1881": "java.lang.String",
                "varReplacer1882": "int",
                "varReplacer1883": "java.lang.String",
                "varReplacer1884": "java.lang.String",
                "varReplacer1885": "int",
                "varReplacer1886": "int",
                "varReplacer1887": "java.lang.String"
            },
            "stackVariables": {
                "$stack5": "kotlin.jvm.internal.Ref$IntRef",
                "$stack6": "java.lang.StringBuilder",
                "$stack7": "java.lang.StringBuilder",
                "$stack8": "java.lang.StringBuilder",
                "$stack9": "java.lang.StringBuilder",
                "$stack10": "java.lang.StringBuilder",
                "$stack11": "java.lang.StringBuilder",
                "$stack12": "int",
                "$stack13": "java.lang.StringBuilder",
                "$stack14": "java.lang.String",
                "$stack15": "java.io.PrintStream",
                "$stack16": "int"
            },
            "invokeExpressions": [
                "<kotlin.jvm.internal.Ref$IntRef: void <init>()>",
                "<java.lang.StringBuilder: void <init>()>",
                "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
                "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
                "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
                "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
                "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
                "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
                "<java.lang.StringBuilder: java.lang.String toString()>",
                "<java.io.PrintStream: void println(java.lang.Object)>",
                "<de.fraunhofer.iem.functions.localFunctions.inTopLevel.MainKt: int stepIncrementer1For10Count$add-1(int,kotlin.jvm.internal.Ref$IntRef,int,int,java.lang.String)>"
            ]
        },
        "void main()": {
            "localVariables": {
                "varReplacer1888": "int",
                "varReplacer1889": "java.lang.String",
                "varReplacer1890": "java.lang.String",
                "varReplacer1891": "int",
                "varReplacer1892": "int",
                "varReplacer1893": "int",
                "varReplacer1894": "int",
                "varReplacer1895": "java.lang.String",
                "varReplacer1896": "int",
                "varReplacer1897": "int",
                "varReplacer1898": "int",
                "varReplacer1899": "int",
                "varReplacer1900": "int",
                "varReplacer1901": "int",
                "varReplacer1902": "int",
                "varReplacer1903": "java.lang.String",
                "varReplacer1904": "int",
                "varReplacer1905": "int",
                "varReplacer1906": "int",
                "varReplacer1907": "int",
                "varReplacer1908": "int",
                "varReplacer1909": "int",
                "varReplacer1910": "java.lang.String",
                "varReplacer1911": "java.lang.String"
            },
            "stackVariables": {
                "$stack2": "java.lang.StringBuilder",
                "$stack3": "java.lang.StringBuilder",
                "$stack4": "int",
                "$stack5": "java.lang.StringBuilder",
                "$stack6": "java.lang.StringBuilder",
                "$stack7": "java.lang.String",
                "$stack8": "java.io.PrintStream",
                "$stack9": "java.lang.StringBuilder",
                "$stack10": "java.lang.StringBuilder",
                "$stack11": "int",
                "$stack12": "java.lang.StringBuilder",
                "$stack13": "java.lang.StringBuilder",
                "$stack14": "java.lang.String",
                "$stack15": "java.io.PrintStream",
                "$stack16": "java.lang.StringBuilder",
                "$stack17": "java.lang.StringBuilder",
                "$stack18": "int",
                "$stack19": "java.lang.StringBuilder",
                "$stack20": "java.lang.StringBuilder",
                "$stack21": "java.lang.String",
                "$stack22": "java.io.PrintStream",
                "$stack23": "java.lang.StringBuilder",
                "$stack24": "java.lang.StringBuilder",
                "$stack25": "int",
                "$stack26": "java.lang.StringBuilder",
                "$stack27": "java.lang.StringBuilder",
                "$stack28": "java.lang.String",
                "$stack29": "java.io.PrintStream",
                "$stack30": "java.lang.StringBuilder",
                "$stack31": "java.lang.StringBuilder",
                "$stack32": "int",
                "$stack33": "java.lang.StringBuilder",
                "$stack34": "java.lang.StringBuilder",
                "$stack35": "java.lang.String",
                "$stack36": "java.io.PrintStream",
                "$stack37": "java.lang.StringBuilder",
                "$stack38": "java.lang.StringBuilder",
                "$stack39": "int",
                "$stack40": "java.lang.StringBuilder",
                "$stack41": "java.lang.StringBuilder",
                "$stack42": "java.lang.String",
                "$stack43": "java.io.PrintStream"
            },
            "invokeExpressions": [
                "<java.lang.StringBuilder: void <init>()>",
                "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
                "<de.fraunhofer.iem.functions.localFunctions.inTopLevel.MainKt: int stepIncrementer(int,int,int)>",
                "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
                "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
                "<java.lang.StringBuilder: java.lang.String toString()>",
                "<java.io.PrintStream: void println(java.lang.Object)>",
                "<java.lang.StringBuilder: void <init>()>",
                "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
                "<de.fraunhofer.iem.functions.localFunctions.inTopLevel.MainKt: int stepIncrementer(int,int,int)>",
                "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
                "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
                "<java.lang.StringBuilder: java.lang.String toString()>",
                "<java.io.PrintStream: void println(java.lang.Object)>",
                "<java.lang.StringBuilder: void <init>()>",
                "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
                "<de.fraunhofer.iem.functions.localFunctions.inTopLevel.MainKt: int stepIncrementer(int,int,int)>",
                "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
                "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
                "<java.lang.StringBuilder: java.lang.String toString()>",
                "<java.io.PrintStream: void println(java.lang.Object)>",
                "<java.lang.StringBuilder: void <init>()>",
                "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
                "<de.fraunhofer.iem.functions.localFunctions.inTopLevel.MainKt: int stepIncrementer1For10Count(int)>",
                "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
                "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
                "<java.lang.StringBuilder: java.lang.String toString()>",
                "<java.io.PrintStream: void println(java.lang.Object)>",
                "<java.lang.StringBuilder: void <init>()>",
                "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
                "<de.fraunhofer.iem.functions.localFunctions.inTopLevel.MainKt: int stepIncrementer1For10Count(int)>",
                "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
                "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
                "<java.lang.StringBuilder: java.lang.String toString()>",
                "<java.io.PrintStream: void println(java.lang.Object)>",
                "<java.lang.StringBuilder: void <init>()>",
                "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
                "<de.fraunhofer.iem.functions.localFunctions.inTopLevel.MainKt: int stepIncrementer1For10Count(int)>",
                "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
                "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
                "<java.lang.StringBuilder: java.lang.String toString()>",
                "<java.io.PrintStream: void println(java.lang.Object)>"
            ]
        },
        "void main(java.lang.String[])": {
            "localVariables": {"args": "java.lang.String[]"},
            "stackVariables": {},
            "invokeExpressions": ["<de.fraunhofer.iem.functions.localFunctions.inTopLevel.MainKt: void main()>"]
        },
        "void stepIncrementer$add(int,kotlin.jvm.internal.Ref$IntRef,int,int)": {
            "localVariables": {
                "currentIter": "int",
                "res": "kotlin.jvm.internal.Ref$IntRef"
            },
            "stackVariables": {
                "$iterCount": "int",
                "$step": "int",
                "$stack4": "int",
                "$stack5": "int",
                "$stack6": "int"
            },
            "invokeExpressions": ["<de.fraunhofer.iem.functions.localFunctions.inTopLevel.MainKt: void stepIncrementer$add(int,kotlin.jvm.internal.Ref$IntRef,int,int)>"]
        },
        "void stepIncrementer$add-0(kotlin.jvm.internal.Ref$ObjectRef,int,int)": {
            "localVariables": {
                "currentIter": "int",
                "dummyInt": "int",
                "dummyString": "kotlin.jvm.internal.Ref$ObjectRef",
                "varReplacer1912": "java.lang.String",
                "varReplacer1913": "java.lang.String",
                "varReplacer1914": "java.lang.String"
            },
            "stackVariables": {
                "$stack5": "java.lang.StringBuilder",
                "$stack6": "java.lang.StringBuilder",
                "$stack7": "java.lang.StringBuilder",
                "$stack8": "java.lang.StringBuilder",
                "$stack9": "java.lang.StringBuilder",
                "$stack10": "java.lang.String",
                "$stack11": "java.io.PrintStream"
            },
            "invokeExpressions": [
                "<java.lang.StringBuilder: void <init>()>",
                "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
                "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
                "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
                "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
                "<java.lang.StringBuilder: java.lang.String toString()>",
                "<java.io.PrintStream: void println(java.lang.Object)>"
            ]
        },
        "int stepIncrementer1For10Count$add-1(int,kotlin.jvm.internal.Ref$IntRef,int,int,java.lang.String)": {
            "localVariables": {
                "currentIter": "int",
                "iterCount": "int",
                "step": "kotlin.jvm.internal.Ref$IntRef",
                "dummyFlag": "java.lang.String",
                "varReplacer1915": "java.lang.String",
                "varReplacer1916": "java.lang.String",
                "varReplacer1917": "int"
            },
            "stackVariables": {
                "$stack5": "int",
                "$number": "int",
                "$stack6": "int",
                "$stack7": "int",
                "$stack8": "int",
                "$stack9": "int",
                "$stack10": "int",
                "$stack11": "int",
                "$stack12": "int"
            },
            "invokeExpressions": [
                "<de.fraunhofer.iem.functions.localFunctions.inTopLevel.MainKt: int stepIncrementer1For10Count$add-1(int,kotlin.jvm.internal.Ref$IntRef,int,int,java.lang.String)>",
                "<de.fraunhofer.iem.functions.localFunctions.inTopLevel.MainKt: int stepIncrementer1For10Count$add-1(int,kotlin.jvm.internal.Ref$IntRef,int,int,java.lang.String)>"
            ]
        }
    }
}
