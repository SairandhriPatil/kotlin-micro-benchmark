public final class de.fraunhofer.iem.basics.controlFlow.returnsAndJumps.KotlinLabelledContinueKt extends java.lang.Object
{

    private static final void singleLoopLabelledContinue(int)
    {
        java.io.PrintStream $stack5;
        int range, i, $stack4, l1;

        nop;

        range := @parameter0: int;

        l1 = 0;

        if 0 >= range goto label4;

        nop;

     label1:
        nop;

        i = l1;

        l1 = l1 + 1;

        $stack4 = i % 2;

        if $stack4 != 0 goto label2;

        nop;

        goto label3;

     label2:
        nop;

        $stack5 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack5.<java.io.PrintStream: void println(int)>(i);

     label3:
        if l1 < range goto label1;

        nop;

     label4:
        nop;

        return;
    }

    private static final void doubleLoopLabelledContinue(int)
    {
        java.io.PrintStream $stack17;
        int range, i, $stack7, j, $stack11, l1, l3;
        java.lang.StringBuilder $stack12, $stack13, $stack14, $stack15;
        java.lang.String $stack16, varReplacer166;

        nop;

        range := @parameter0: int;

        l1 = 0;

        if 0 >= range goto label6;

        nop;

     label1:
        nop;

        i = l1;

        l1 = l1 + 1;

        $stack7 = i % 2;

        if $stack7 != 0 goto label2;

        nop;

        goto label5;

     label2:
        nop;

        l3 = 0;

        if 0 >= range goto label5;

        nop;

     label3:
        nop;

        j = l3;

        l3 = l3 + 1;

        $stack11 = j % 2;

        if $stack11 == 0 goto label4;

        nop;

        goto label5;

     label4:
        nop;

        $stack12 = new java.lang.StringBuilder;

        specialinvoke $stack12.<java.lang.StringBuilder: void <init>()>();

        $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i);

        varReplacer166 = " --> ";

        $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer166);

        $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(j);

        $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack17 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack17.<java.io.PrintStream: void println(java.lang.Object)>($stack16);

        if l3 < range goto label3;

        nop;

     label5:
        nop;

        if l1 < range goto label1;

        nop;

     label6:
        nop;

        return;
    }

    private static final void doubleLoopSingleLabelledContinue(int)
    {
        java.io.PrintStream $stack17;
        int range, i, j, $stack11, l1, l3;
        java.lang.StringBuilder $stack12, $stack13, $stack14, $stack15;
        java.lang.String $stack16, varReplacer167;

        nop;

        range := @parameter0: int;

        l1 = 0;

        if 0 >= range goto label5;

        nop;

     label1:
        nop;

        i = l1;

        l1 = l1 + 1;

        l3 = 0;

        if 0 >= range goto label4;

        nop;

     label2:
        nop;

        j = l3;

        l3 = l3 + 1;

        $stack11 = j % 2;

        if $stack11 == 0 goto label3;

        nop;

        goto label4;

     label3:
        nop;

        $stack12 = new java.lang.StringBuilder;

        specialinvoke $stack12.<java.lang.StringBuilder: void <init>()>();

        $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i);

        varReplacer167 = " --> ";

        $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer167);

        $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(j);

        $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack17 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack17.<java.io.PrintStream: void println(java.lang.Object)>($stack16);

        if l3 < range goto label2;

        nop;

     label4:
        nop;

        if l1 < range goto label1;

        nop;

     label5:
        nop;

        return;
    }

    public static final void main()
    {
        int varReplacer168, varReplacer169, varReplacer170;

        nop;

        varReplacer169 = 50;

        staticinvoke <de.fraunhofer.iem.basics.controlFlow.returnsAndJumps.KotlinLabelledContinueKt: void singleLoopLabelledContinue(int)>(varReplacer169);

        varReplacer170 = 5;

        staticinvoke <de.fraunhofer.iem.basics.controlFlow.returnsAndJumps.KotlinLabelledContinueKt: void doubleLoopLabelledContinue(int)>(varReplacer170);

        varReplacer168 = 5;

        staticinvoke <de.fraunhofer.iem.basics.controlFlow.returnsAndJumps.KotlinLabelledContinueKt: void doubleLoopSingleLabelledContinue(int)>(varReplacer168);

        return;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] args;

        nop;

        args := @parameter0: java.lang.String[];

        staticinvoke <de.fraunhofer.iem.basics.controlFlow.returnsAndJumps.KotlinLabelledContinueKt: void main()>();

        return;
    }
}
