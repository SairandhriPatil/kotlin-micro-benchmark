{
    "className": "de.fraunhofer.iem.basics.controlFlow.conditionAndLoops.KotlinIfKt",
    "superClass": "java.lang.Object",
    "implementedInterface": [],
    "methodCount": 8,
    "methodsSignature": [
        "<de.fraunhofer.iem.basics.controlFlow.conditionAndLoops.KotlinIfKt: void main()>",
        "<de.fraunhofer.iem.basics.controlFlow.conditionAndLoops.KotlinIfKt: int max1(int,int)>",
        "<de.fraunhofer.iem.basics.controlFlow.conditionAndLoops.KotlinIfKt: int max2(int,int)>",
        "<de.fraunhofer.iem.basics.controlFlow.conditionAndLoops.KotlinIfKt: int max3(int,int)>",
        "<de.fraunhofer.iem.basics.controlFlow.conditionAndLoops.KotlinIfKt: int max4(int,int)>",
        "<de.fraunhofer.iem.basics.controlFlow.conditionAndLoops.KotlinIfKt: int max5(int,int,int)>",
        "<de.fraunhofer.iem.basics.controlFlow.conditionAndLoops.KotlinIfKt: java.lang.String sign(int)>",
        "<de.fraunhofer.iem.basics.controlFlow.conditionAndLoops.KotlinIfKt: void main(java.lang.String[])>"
    ],
    "methodsInformation": {
        "void main()": {
            "localVariables": {
                "varReplacer26": "java.lang.String",
                "varReplacer27": "int",
                "varReplacer28": "int",
                "varReplacer29": "int",
                "varReplacer30": "int",
                "varReplacer31": "int",
                "varReplacer32": "int",
                "varReplacer33": "int",
                "varReplacer34": "java.lang.String",
                "varReplacer35": "int",
                "varReplacer36": "int",
                "varReplacer37": "java.lang.String",
                "varReplacer38": "java.lang.String",
                "varReplacer39": "int",
                "varReplacer40": "java.lang.String",
                "varReplacer41": "java.lang.String",
                "varReplacer42": "int",
                "varReplacer43": "int",
                "varReplacer44": "int",
                "varReplacer45": "int",
                "varReplacer46": "int",
                "varReplacer47": "int",
                "varReplacer48": "int",
                "varReplacer49": "java.lang.String",
                "varReplacer50": "int",
                "varReplacer51": "int",
                "varReplacer52": "int",
                "varReplacer53": "int",
                "varReplacer54": "java.lang.String",
                "varReplacer55": "java.lang.String",
                "varReplacer56": "int",
                "varReplacer57": "int",
                "varReplacer58": "java.lang.String",
                "varReplacer59": "java.lang.String",
                "varReplacer60": "java.lang.String"
            },
            "stackVariables": {
                "$stack3": "int",
                "$stack4": "java.lang.Integer",
                "$stack5": "java.lang.String",
                "$stack6": "java.io.PrintStream",
                "$stack8": "int",
                "$stack9": "java.lang.Integer",
                "$stack10": "java.lang.String",
                "$stack11": "java.io.PrintStream",
                "$stack13": "int",
                "$stack14": "java.lang.Integer",
                "$stack15": "java.lang.String",
                "$stack16": "java.io.PrintStream",
                "$stack18": "int",
                "$stack19": "java.lang.Integer",
                "$stack20": "java.lang.String",
                "$stack21": "java.io.PrintStream",
                "$stack23": "int",
                "$stack24": "java.lang.Integer",
                "$stack25": "java.lang.String",
                "$stack26": "java.io.PrintStream",
                "$stack28": "int",
                "$stack29": "java.lang.Integer",
                "$stack30": "java.lang.String",
                "$stack31": "java.io.PrintStream",
                "$stack33": "int",
                "$stack34": "java.lang.Integer",
                "$stack35": "java.lang.String",
                "$stack36": "java.io.PrintStream",
                "$stack38": "int",
                "$stack39": "java.lang.Integer",
                "$stack40": "java.lang.String",
                "$stack41": "java.io.PrintStream",
                "$stack43": "int",
                "$stack44": "java.lang.Integer",
                "$stack45": "java.lang.String",
                "$stack46": "java.io.PrintStream",
                "$stack48": "int",
                "$stack49": "java.lang.Integer",
                "$stack50": "java.lang.String",
                "$stack51": "java.io.PrintStream",
                "$stack53": "java.lang.String",
                "$stack54": "java.lang.String",
                "$stack55": "java.io.PrintStream",
                "$stack57": "java.lang.String",
                "$stack58": "java.lang.String",
                "$stack59": "java.io.PrintStream",
                "$i0": "int"
            },
            "invokeExpressions": [
                "<de.fraunhofer.iem.basics.controlFlow.conditionAndLoops.KotlinIfKt: int max1(int,int)>",
                "<java.lang.Integer: java.lang.Integer valueOf(int)>",
                "<kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>",
                "<java.io.PrintStream: void println(java.lang.Object)>",
                "<de.fraunhofer.iem.basics.controlFlow.conditionAndLoops.KotlinIfKt: int max1(int,int)>",
                "<java.lang.Integer: java.lang.Integer valueOf(int)>",
                "<kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>",
                "<java.io.PrintStream: void println(java.lang.Object)>",
                "<de.fraunhofer.iem.basics.controlFlow.conditionAndLoops.KotlinIfKt: int max2(int,int)>",
                "<java.lang.Integer: java.lang.Integer valueOf(int)>",
                "<kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>",
                "<java.io.PrintStream: void println(java.lang.Object)>",
                "<de.fraunhofer.iem.basics.controlFlow.conditionAndLoops.KotlinIfKt: int max2(int,int)>",
                "<java.lang.Integer: java.lang.Integer valueOf(int)>",
                "<kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>",
                "<java.io.PrintStream: void println(java.lang.Object)>",
                "<de.fraunhofer.iem.basics.controlFlow.conditionAndLoops.KotlinIfKt: int max3(int,int)>",
                "<java.lang.Integer: java.lang.Integer valueOf(int)>",
                "<kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>",
                "<java.io.PrintStream: void println(java.lang.Object)>",
                "<de.fraunhofer.iem.basics.controlFlow.conditionAndLoops.KotlinIfKt: int max3(int,int)>",
                "<java.lang.Integer: java.lang.Integer valueOf(int)>",
                "<kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>",
                "<java.io.PrintStream: void println(java.lang.Object)>",
                "<de.fraunhofer.iem.basics.controlFlow.conditionAndLoops.KotlinIfKt: int max4(int,int)>",
                "<java.lang.Integer: java.lang.Integer valueOf(int)>",
                "<kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>",
                "<java.io.PrintStream: void println(java.lang.Object)>",
                "<de.fraunhofer.iem.basics.controlFlow.conditionAndLoops.KotlinIfKt: int max4(int,int)>",
                "<java.lang.Integer: java.lang.Integer valueOf(int)>",
                "<kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>",
                "<java.io.PrintStream: void println(java.lang.Object)>",
                "<de.fraunhofer.iem.basics.controlFlow.conditionAndLoops.KotlinIfKt: int max5(int,int,int)>",
                "<java.lang.Integer: java.lang.Integer valueOf(int)>",
                "<kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>",
                "<java.io.PrintStream: void println(java.lang.Object)>",
                "<de.fraunhofer.iem.basics.controlFlow.conditionAndLoops.KotlinIfKt: int max5(int,int,int)>",
                "<java.lang.Integer: java.lang.Integer valueOf(int)>",
                "<kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>",
                "<java.io.PrintStream: void println(java.lang.Object)>",
                "<de.fraunhofer.iem.basics.controlFlow.conditionAndLoops.KotlinIfKt: java.lang.String sign(int)>",
                "<kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>",
                "<java.io.PrintStream: void println(java.lang.Object)>",
                "<de.fraunhofer.iem.basics.controlFlow.conditionAndLoops.KotlinIfKt: java.lang.String sign(int)>",
                "<kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)>",
                "<java.io.PrintStream: void println(java.lang.Object)>"
            ]
        },
        "int max1(int,int)": {
            "localVariables": {
                "num1": "int",
                "num2": "int",
                "max": "int"
            },
            "stackVariables": {},
            "invokeExpressions": []
        },
        "int max2(int,int)": {
            "localVariables": {
                "num1": "int",
                "num2": "int",
                "max": "int"
            },
            "stackVariables": {},
            "invokeExpressions": []
        },
        "int max3(int,int)": {
            "localVariables": {
                "num1": "int",
                "num2": "int"
            },
            "stackVariables": {"$stack2": "int"},
            "invokeExpressions": []
        },
        "int max4(int,int)": {
            "localVariables": {
                "num1": "int",
                "num2": "int",
                "varReplacer61": "java.lang.String",
                "varReplacer62": "java.lang.String"
            },
            "stackVariables": {
                "$stack4": "java.lang.StringBuilder",
                "$stack5": "java.lang.StringBuilder",
                "$stack6": "java.lang.StringBuilder",
                "$stack7": "java.lang.StringBuilder",
                "$stack8": "java.lang.String",
                "$stack9": "java.io.PrintStream",
                "$stack10": "java.lang.StringBuilder",
                "$stack11": "java.lang.StringBuilder",
                "$stack12": "java.lang.StringBuilder",
                "$stack13": "java.lang.StringBuilder",
                "$stack14": "java.lang.String",
                "$stack15": "java.io.PrintStream",
                "$stack16": "int"
            },
            "invokeExpressions": [
                "<java.lang.StringBuilder: void <init>()>",
                "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
                "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
                "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
                "<java.lang.StringBuilder: java.lang.String toString()>",
                "<java.io.PrintStream: void println(java.lang.Object)>",
                "<java.lang.StringBuilder: void <init>()>",
                "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
                "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
                "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
                "<java.lang.StringBuilder: java.lang.String toString()>",
                "<java.io.PrintStream: void println(java.lang.Object)>"
            ]
        },
        "int max5(int,int,int)": {
            "localVariables": {
                "num1": "int",
                "num2": "int",
                "num3": "int"
            },
            "stackVariables": {"$stack3": "int"},
            "invokeExpressions": []
        },
        "java.lang.String sign(int)": {
            "localVariables": {
                "num": "int",
                "varReplacer63": "java.lang.String",
                "varReplacer64": "java.lang.String",
                "varReplacer65": "java.lang.String"
            },
            "stackVariables": {
                "$stack5": "java.lang.StringBuilder",
                "$stack6": "java.lang.StringBuilder",
                "$stack7": "java.lang.StringBuilder",
                "$stack8": "java.lang.String",
                "$stack9": "java.io.PrintStream",
                "$stack16": "java.lang.StringBuilder",
                "$stack17": "java.lang.StringBuilder",
                "$stack18": "java.lang.StringBuilder",
                "$stack19": "java.lang.String",
                "$stack20": "java.io.PrintStream",
                "$stack27": "java.lang.StringBuilder",
                "$stack28": "java.lang.StringBuilder",
                "$stack29": "java.lang.StringBuilder",
                "$stack30": "java.lang.String",
                "$stack31": "java.io.PrintStream",
                "$stack21": "char",
                "$stack10": "java.lang.String",
                "$stack11": "java.lang.StringBuilder",
                "$stack12": "java.lang.String",
                "$stack13": "java.lang.StringBuilder",
                "$stack14": "java.lang.StringBuilder",
                "$stack15": "java.lang.String"
            },
            "invokeExpressions": [
                "<java.lang.StringBuilder: void <init>()>",
                "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
                "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
                "<java.lang.StringBuilder: java.lang.String toString()>",
                "<java.io.PrintStream: void println(java.lang.Object)>",
                "<java.lang.StringBuilder: void <init>()>",
                "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
                "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
                "<java.lang.StringBuilder: java.lang.String toString()>",
                "<java.io.PrintStream: void println(java.lang.Object)>",
                "<java.lang.StringBuilder: void <init>()>",
                "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
                "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
                "<java.lang.StringBuilder: java.lang.String toString()>",
                "<java.io.PrintStream: void println(java.lang.Object)>",
                "<java.lang.String: java.lang.String valueOf(int)>",
                "<java.lang.StringBuilder: void <init>()>",
                "<java.lang.String: java.lang.String valueOf(char)>",
                "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
                "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
                "<java.lang.StringBuilder: java.lang.String toString()>"
            ]
        },
        "void main(java.lang.String[])": {
            "localVariables": {"args": "java.lang.String[]"},
            "stackVariables": {},
            "invokeExpressions": ["<de.fraunhofer.iem.basics.controlFlow.conditionAndLoops.KotlinIfKt: void main()>"]
        }
    }
}
